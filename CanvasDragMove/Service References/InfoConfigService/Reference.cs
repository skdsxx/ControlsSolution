//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace CanvasDragMove.InfoConfigService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class LoginDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSuccessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TokenField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSuccess {
            get {
                return this.IsSuccessField;
            }
            set {
                if ((this.IsSuccessField.Equals(value) != true)) {
                    this.IsSuccessField = value;
                    this.RaisePropertyChanged("IsSuccess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Token {
            get {
                return this.TokenField;
            }
            set {
                if ((object.ReferenceEquals(this.TokenField, value) != true)) {
                    this.TokenField = value;
                    this.RaisePropertyChanged("Token");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CfgParameterDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class CfgParameterDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Code {
            get {
                return this.CodeField;
            }
            set {
                if ((this.CodeField.Equals(value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDtoOfguid", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsDeviceDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsDictionaryDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsStaffDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsStaffDtoone))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsDepartmentDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsTeamDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsDepartmentLeaderDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsStaffTeamDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsSchedualTableDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsAttendanceDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsResourceDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsAttendanceStaffInfoDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsAttendanceRecordRealtimeStaffDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsSuspectDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsContrabandDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.RcCivilizationDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.RcEventDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.RcGleanDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.RcHandDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.RcRewordpunishDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsCameraDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsBlacklistDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsSuspectFlightDto))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.CfgParameterDto))]
    public partial class BaseDtoOfguid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsDeviceDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsDeviceDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CameraNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRelatedCameraField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XcodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CameraNames {
            get {
                return this.CameraNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.CameraNamesField, value) != true)) {
                    this.CameraNamesField = value;
                    this.RaisePropertyChanged("CameraNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Ip {
            get {
                return this.IpField;
            }
            set {
                if ((object.ReferenceEquals(this.IpField, value) != true)) {
                    this.IpField = value;
                    this.RaisePropertyChanged("Ip");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRelatedCamera {
            get {
                return this.IsRelatedCameraField;
            }
            set {
                if ((this.IsRelatedCameraField.Equals(value) != true)) {
                    this.IsRelatedCameraField = value;
                    this.RaisePropertyChanged("IsRelatedCamera");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Xcode {
            get {
                return this.XcodeField;
            }
            set {
                if ((object.ReferenceEquals(this.XcodeField, value) != true)) {
                    this.XcodeField = value;
                    this.RaisePropertyChanged("Xcode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsDictionaryDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsDictionaryDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateUserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UpdateUser {
            get {
                return this.UpdateUserField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateUserField, value) != true)) {
                    this.UpdateUserField = value;
                    this.RaisePropertyChanged("UpdateUser");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsStaffDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsStaffDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatebirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeletelogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntertimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NativeplaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassgradesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoliticalstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostqualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> RolesIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkilllevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateLoginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkstatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Datebirth {
            get {
                return this.DatebirthField;
            }
            set {
                if ((this.DatebirthField.Equals(value) != true)) {
                    this.DatebirthField = value;
                    this.RaisePropertyChanged("Datebirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Deletelogo {
            get {
                return this.DeletelogoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletelogoField, value) != true)) {
                    this.DeletelogoField = value;
                    this.RaisePropertyChanged("Deletelogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Education {
            get {
                return this.EducationField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationField, value) != true)) {
                    this.EducationField = value;
                    this.RaisePropertyChanged("Education");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Entertime {
            get {
                return this.EntertimeField;
            }
            set {
                if ((this.EntertimeField.Equals(value) != true)) {
                    this.EntertimeField = value;
                    this.RaisePropertyChanged("Entertime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fingerprint {
            get {
                return this.FingerprintField;
            }
            set {
                if ((object.ReferenceEquals(this.FingerprintField, value) != true)) {
                    this.FingerprintField = value;
                    this.RaisePropertyChanged("Fingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNo {
            get {
                return this.IdNoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNoField, value) != true)) {
                    this.IdNoField = value;
                    this.RaisePropertyChanged("IdNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLock {
            get {
                return this.IsLockField;
            }
            set {
                if ((this.IsLockField.Equals(value) != true)) {
                    this.IsLockField = value;
                    this.RaisePropertyChanged("IsLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string National {
            get {
                return this.NationalField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalField, value) != true)) {
                    this.NationalField = value;
                    this.RaisePropertyChanged("National");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nativeplace {
            get {
                return this.NativeplaceField;
            }
            set {
                if ((object.ReferenceEquals(this.NativeplaceField, value) != true)) {
                    this.NativeplaceField = value;
                    this.RaisePropertyChanged("Nativeplace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passgrades {
            get {
                return this.PassgradesField;
            }
            set {
                if ((object.ReferenceEquals(this.PassgradesField, value) != true)) {
                    this.PassgradesField = value;
                    this.RaisePropertyChanged("Passgrades");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Politicalstatus {
            get {
                return this.PoliticalstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PoliticalstatusField, value) != true)) {
                    this.PoliticalstatusField = value;
                    this.RaisePropertyChanged("Politicalstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postqualification {
            get {
                return this.PostqualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.PostqualificationField, value) != true)) {
                    this.PostqualificationField = value;
                    this.RaisePropertyChanged("Postqualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Professional {
            get {
                return this.ProfessionalField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionalField, value) != true)) {
                    this.ProfessionalField = value;
                    this.RaisePropertyChanged("Professional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> RolesId {
            get {
                return this.RolesIdField;
            }
            set {
                if ((this.RolesIdField.Equals(value) != true)) {
                    this.RolesIdField = value;
                    this.RaisePropertyChanged("RolesId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skilllevel {
            get {
                return this.SkilllevelField;
            }
            set {
                if ((object.ReferenceEquals(this.SkilllevelField, value) != true)) {
                    this.SkilllevelField = value;
                    this.RaisePropertyChanged("Skilllevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateLoginTime {
            get {
                return this.UpdateLoginTimeField;
            }
            set {
                if ((this.UpdateLoginTimeField.Equals(value) != true)) {
                    this.UpdateLoginTimeField = value;
                    this.RaisePropertyChanged("UpdateLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Workstatus {
            get {
                return this.WorkstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkstatusField, value) != true)) {
                    this.WorkstatusField = value;
                    this.RaisePropertyChanged("Workstatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsStaffDtoone", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsStaffDtoone : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DatebirthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeletelogoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EducationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EntertimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FingerprintField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLockField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsOnlineField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NativeplaceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassgradesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PoliticalstatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostqualificationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostqualificationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProfessionalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> RolesIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolesNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkilllevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.Guid> TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateLoginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WorkstatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Datebirth {
            get {
                return this.DatebirthField;
            }
            set {
                if ((this.DatebirthField.Equals(value) != true)) {
                    this.DatebirthField = value;
                    this.RaisePropertyChanged("Datebirth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Deletelogo {
            get {
                return this.DeletelogoField;
            }
            set {
                if ((object.ReferenceEquals(this.DeletelogoField, value) != true)) {
                    this.DeletelogoField = value;
                    this.RaisePropertyChanged("Deletelogo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Education {
            get {
                return this.EducationField;
            }
            set {
                if ((object.ReferenceEquals(this.EducationField, value) != true)) {
                    this.EducationField = value;
                    this.RaisePropertyChanged("Education");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Entertime {
            get {
                return this.EntertimeField;
            }
            set {
                if ((this.EntertimeField.Equals(value) != true)) {
                    this.EntertimeField = value;
                    this.RaisePropertyChanged("Entertime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fingerprint {
            get {
                return this.FingerprintField;
            }
            set {
                if ((object.ReferenceEquals(this.FingerprintField, value) != true)) {
                    this.FingerprintField = value;
                    this.RaisePropertyChanged("Fingerprint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNo {
            get {
                return this.IdNoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNoField, value) != true)) {
                    this.IdNoField = value;
                    this.RaisePropertyChanged("IdNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLock {
            get {
                return this.IsLockField;
            }
            set {
                if ((this.IsLockField.Equals(value) != true)) {
                    this.IsLockField = value;
                    this.RaisePropertyChanged("IsLock");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsOnline {
            get {
                return this.IsOnlineField;
            }
            set {
                if ((this.IsOnlineField.Equals(value) != true)) {
                    this.IsOnlineField = value;
                    this.RaisePropertyChanged("IsOnline");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string National {
            get {
                return this.NationalField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalField, value) != true)) {
                    this.NationalField = value;
                    this.RaisePropertyChanged("National");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NationalName {
            get {
                return this.NationalNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalNameField, value) != true)) {
                    this.NationalNameField = value;
                    this.RaisePropertyChanged("NationalName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nativeplace {
            get {
                return this.NativeplaceField;
            }
            set {
                if ((object.ReferenceEquals(this.NativeplaceField, value) != true)) {
                    this.NativeplaceField = value;
                    this.RaisePropertyChanged("Nativeplace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passgrades {
            get {
                return this.PassgradesField;
            }
            set {
                if ((object.ReferenceEquals(this.PassgradesField, value) != true)) {
                    this.PassgradesField = value;
                    this.RaisePropertyChanged("Passgrades");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Politicalstatus {
            get {
                return this.PoliticalstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PoliticalstatusField, value) != true)) {
                    this.PoliticalstatusField = value;
                    this.RaisePropertyChanged("Politicalstatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Postqualification {
            get {
                return this.PostqualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.PostqualificationField, value) != true)) {
                    this.PostqualificationField = value;
                    this.RaisePropertyChanged("Postqualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostqualificationName {
            get {
                return this.PostqualificationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PostqualificationNameField, value) != true)) {
                    this.PostqualificationNameField = value;
                    this.RaisePropertyChanged("PostqualificationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Professional {
            get {
                return this.ProfessionalField;
            }
            set {
                if ((object.ReferenceEquals(this.ProfessionalField, value) != true)) {
                    this.ProfessionalField = value;
                    this.RaisePropertyChanged("Professional");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> RolesId {
            get {
                return this.RolesIdField;
            }
            set {
                if ((this.RolesIdField.Equals(value) != true)) {
                    this.RolesIdField = value;
                    this.RaisePropertyChanged("RolesId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RolesName {
            get {
                return this.RolesNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesNameField, value) != true)) {
                    this.RolesNameField = value;
                    this.RaisePropertyChanged("RolesName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skilllevel {
            get {
                return this.SkilllevelField;
            }
            set {
                if ((object.ReferenceEquals(this.SkilllevelField, value) != true)) {
                    this.SkilllevelField = value;
                    this.RaisePropertyChanged("Skilllevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.Guid> TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateLoginTime {
            get {
                return this.UpdateLoginTimeField;
            }
            set {
                if ((this.UpdateLoginTimeField.Equals(value) != true)) {
                    this.UpdateLoginTimeField = value;
                    this.RaisePropertyChanged("UpdateLoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Workstatus {
            get {
                return this.WorkstatusField;
            }
            set {
                if ((object.ReferenceEquals(this.WorkstatusField, value) != true)) {
                    this.WorkstatusField = value;
                    this.RaisePropertyChanged("Workstatus");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsDepartmentDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsDepartmentDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeaderPassgradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeaderPassgrade {
            get {
                return this.LeaderPassgradeField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaderPassgradeField, value) != true)) {
                    this.LeaderPassgradeField = value;
                    this.RaisePropertyChanged("LeaderPassgrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficePhone {
            get {
                return this.OfficePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficePhoneField, value) != true)) {
                    this.OfficePhoneField = value;
                    this.RaisePropertyChanged("OfficePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsTeamDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsTeamDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeaderPassgradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Count {
            get {
                return this.CountField;
            }
            set {
                if ((this.CountField.Equals(value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeaderPassgrade {
            get {
                return this.LeaderPassgradeField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaderPassgradeField, value) != true)) {
                    this.LeaderPassgradeField = value;
                    this.RaisePropertyChanged("LeaderPassgrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsDepartmentLeaderDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsDepartmentLeaderDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeaderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeaderPassgradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OfficePhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeaderName {
            get {
                return this.LeaderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaderNameField, value) != true)) {
                    this.LeaderNameField = value;
                    this.RaisePropertyChanged("LeaderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeaderPassgrade {
            get {
                return this.LeaderPassgradeField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaderPassgradeField, value) != true)) {
                    this.LeaderPassgradeField = value;
                    this.RaisePropertyChanged("LeaderPassgrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OfficePhone {
            get {
                return this.OfficePhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.OfficePhoneField, value) != true)) {
                    this.OfficePhoneField = value;
                    this.RaisePropertyChanged("OfficePhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsStaffTeamDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsStaffTeamDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLeaderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeaderIconField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameShowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassgradesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SkilllevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TelephoneField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartName {
            get {
                return this.DepartNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartNameField, value) != true)) {
                    this.DepartNameField = value;
                    this.RaisePropertyChanged("DepartName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLeader {
            get {
                return this.IsLeaderField;
            }
            set {
                if ((this.IsLeaderField.Equals(value) != true)) {
                    this.IsLeaderField = value;
                    this.RaisePropertyChanged("IsLeader");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LeaderIcon {
            get {
                return this.LeaderIconField;
            }
            set {
                if ((object.ReferenceEquals(this.LeaderIconField, value) != true)) {
                    this.LeaderIconField = value;
                    this.RaisePropertyChanged("LeaderIcon");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameShow {
            get {
                return this.NameShowField;
            }
            set {
                if ((object.ReferenceEquals(this.NameShowField, value) != true)) {
                    this.NameShowField = value;
                    this.RaisePropertyChanged("NameShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passgrades {
            get {
                return this.PassgradesField;
            }
            set {
                if ((object.ReferenceEquals(this.PassgradesField, value) != true)) {
                    this.PassgradesField = value;
                    this.RaisePropertyChanged("Passgrades");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Skilllevel {
            get {
                return this.SkilllevelField;
            }
            set {
                if ((object.ReferenceEquals(this.SkilllevelField, value) != true)) {
                    this.SkilllevelField = value;
                    this.RaisePropertyChanged("Skilllevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Telephone {
            get {
                return this.TelephoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TelephoneField, value) != true)) {
                    this.TelephoneField = value;
                    this.RaisePropertyChanged("Telephone");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsSchedualTableDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsSchedualTableDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] EightTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] FirstTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] FiveTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] FourTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHasSchedualField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] NineTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] SecondTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] SevenTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] SixTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] TenTeamsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTeamDto[] ThirdTeamsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] EightTeams {
            get {
                return this.EightTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.EightTeamsField, value) != true)) {
                    this.EightTeamsField = value;
                    this.RaisePropertyChanged("EightTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] FirstTeams {
            get {
                return this.FirstTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstTeamsField, value) != true)) {
                    this.FirstTeamsField = value;
                    this.RaisePropertyChanged("FirstTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] FiveTeams {
            get {
                return this.FiveTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.FiveTeamsField, value) != true)) {
                    this.FiveTeamsField = value;
                    this.RaisePropertyChanged("FiveTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] FourTeams {
            get {
                return this.FourTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.FourTeamsField, value) != true)) {
                    this.FourTeamsField = value;
                    this.RaisePropertyChanged("FourTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHasSchedual {
            get {
                return this.IsHasSchedualField;
            }
            set {
                if ((this.IsHasSchedualField.Equals(value) != true)) {
                    this.IsHasSchedualField = value;
                    this.RaisePropertyChanged("IsHasSchedual");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] NineTeams {
            get {
                return this.NineTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.NineTeamsField, value) != true)) {
                    this.NineTeamsField = value;
                    this.RaisePropertyChanged("NineTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] SecondTeams {
            get {
                return this.SecondTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondTeamsField, value) != true)) {
                    this.SecondTeamsField = value;
                    this.RaisePropertyChanged("SecondTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] SevenTeams {
            get {
                return this.SevenTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SevenTeamsField, value) != true)) {
                    this.SevenTeamsField = value;
                    this.RaisePropertyChanged("SevenTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] SixTeams {
            get {
                return this.SixTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.SixTeamsField, value) != true)) {
                    this.SixTeamsField = value;
                    this.RaisePropertyChanged("SixTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] TenTeams {
            get {
                return this.TenTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.TenTeamsField, value) != true)) {
                    this.TenTeamsField = value;
                    this.RaisePropertyChanged("TenTeams");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTeamDto[] ThirdTeams {
            get {
                return this.ThirdTeamsField;
            }
            set {
                if ((object.ReferenceEquals(this.ThirdTeamsField, value) != true)) {
                    this.ThirdTeamsField = value;
                    this.RaisePropertyChanged("ThirdTeams");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsAttendanceDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsAttendanceDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OffWorkingTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ResourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StaffIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime WorkingTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckStatus {
            get {
                return this.CheckStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckStatusField, value) != true)) {
                    this.CheckStatusField = value;
                    this.RaisePropertyChanged("CheckStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OffWorkingTime {
            get {
                return this.OffWorkingTimeField;
            }
            set {
                if ((this.OffWorkingTimeField.Equals(value) != true)) {
                    this.OffWorkingTimeField = value;
                    this.RaisePropertyChanged("OffWorkingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ResourceId {
            get {
                return this.ResourceIdField;
            }
            set {
                if ((this.ResourceIdField.Equals(value) != true)) {
                    this.ResourceIdField = value;
                    this.RaisePropertyChanged("ResourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceName {
            get {
                return this.ResourceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNameField, value) != true)) {
                    this.ResourceNameField = value;
                    this.RaisePropertyChanged("ResourceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StaffId {
            get {
                return this.StaffIdField;
            }
            set {
                if ((this.StaffIdField.Equals(value) != true)) {
                    this.StaffIdField = value;
                    this.RaisePropertyChanged("StaffId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffName {
            get {
                return this.StaffNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffNameField, value) != true)) {
                    this.StaffNameField = value;
                    this.RaisePropertyChanged("StaffName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime WorkingTime {
            get {
                return this.WorkingTimeField;
            }
            set {
                if ((this.WorkingTimeField.Equals(value) != true)) {
                    this.WorkingTimeField = value;
                    this.RaisePropertyChanged("WorkingTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsAttendanceWorkRecordDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsAttendanceWorkRecordDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ResourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StaffIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionType {
            get {
                return this.PositionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionTypeField, value) != true)) {
                    this.PositionTypeField = value;
                    this.RaisePropertyChanged("PositionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ResourceId {
            get {
                return this.ResourceIdField;
            }
            set {
                if ((this.ResourceIdField.Equals(value) != true)) {
                    this.ResourceIdField = value;
                    this.RaisePropertyChanged("ResourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StaffId {
            get {
                return this.StaffIdField;
            }
            set {
                if ((this.StaffIdField.Equals(value) != true)) {
                    this.StaffIdField = value;
                    this.RaisePropertyChanged("StaffId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsResourceDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsResourceDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnabledField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRelatedResourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RegionNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRelatedResource {
            get {
                return this.IsRelatedResourceField;
            }
            set {
                if ((this.IsRelatedResourceField.Equals(value) != true)) {
                    this.IsRelatedResourceField = value;
                    this.RaisePropertyChanged("IsRelatedResource");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Region {
            get {
                return this.RegionField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionField, value) != true)) {
                    this.RegionField = value;
                    this.RaisePropertyChanged("Region");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceNames {
            get {
                return this.ResourceNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceNamesField, value) != true)) {
                    this.ResourceNamesField = value;
                    this.RaisePropertyChanged("ResourceNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsAttendanceStaffInfoDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsAttendanceStaffInfoDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUnderwayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassgradesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ResourceCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ResourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StaffIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUnderway {
            get {
                return this.IsUnderwayField;
            }
            set {
                if ((this.IsUnderwayField.Equals(value) != true)) {
                    this.IsUnderwayField = value;
                    this.RaisePropertyChanged("IsUnderway");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passgrades {
            get {
                return this.PassgradesField;
            }
            set {
                if ((object.ReferenceEquals(this.PassgradesField, value) != true)) {
                    this.PassgradesField = value;
                    this.RaisePropertyChanged("Passgrades");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionType {
            get {
                return this.PositionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionTypeField, value) != true)) {
                    this.PositionTypeField = value;
                    this.RaisePropertyChanged("PositionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ResourceCode {
            get {
                return this.ResourceCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ResourceCodeField, value) != true)) {
                    this.ResourceCodeField = value;
                    this.RaisePropertyChanged("ResourceCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ResourceId {
            get {
                return this.ResourceIdField;
            }
            set {
                if ((this.ResourceIdField.Equals(value) != true)) {
                    this.ResourceIdField = value;
                    this.RaisePropertyChanged("ResourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StaffId {
            get {
                return this.StaffIdField;
            }
            set {
                if ((this.StaffIdField.Equals(value) != true)) {
                    this.StaffIdField = value;
                    this.RaisePropertyChanged("StaffId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffName {
            get {
                return this.StaffNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffNameField, value) != true)) {
                    this.StaffNameField = value;
                    this.RaisePropertyChanged("StaffName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsAttendanceRecordRealtimeStaffDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsAttendanceRecordRealtimeStaffDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid ResourceIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StaffIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffImgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffPassgradesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid TeamIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PositionType {
            get {
                return this.PositionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionTypeField, value) != true)) {
                    this.PositionTypeField = value;
                    this.RaisePropertyChanged("PositionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ResourceId {
            get {
                return this.ResourceIdField;
            }
            set {
                if ((this.ResourceIdField.Equals(value) != true)) {
                    this.ResourceIdField = value;
                    this.RaisePropertyChanged("ResourceId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StaffId {
            get {
                return this.StaffIdField;
            }
            set {
                if ((this.StaffIdField.Equals(value) != true)) {
                    this.StaffIdField = value;
                    this.RaisePropertyChanged("StaffId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffImg {
            get {
                return this.StaffImgField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffImgField, value) != true)) {
                    this.StaffImgField = value;
                    this.RaisePropertyChanged("StaffImg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffName {
            get {
                return this.StaffNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffNameField, value) != true)) {
                    this.StaffNameField = value;
                    this.RaisePropertyChanged("StaffName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffPassgrades {
            get {
                return this.StaffPassgradesField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffPassgradesField, value) != true)) {
                    this.StaffPassgradesField = value;
                    this.RaisePropertyChanged("StaffPassgrades");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffPhone {
            get {
                return this.StaffPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffPhoneField, value) != true)) {
                    this.StaffPhoneField = value;
                    this.RaisePropertyChanged("StaffPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid TeamId {
            get {
                return this.TeamIdField;
            }
            set {
                if ((this.TeamIdField.Equals(value) != true)) {
                    this.TeamIdField = value;
                    this.RaisePropertyChanged("TeamId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamName {
            get {
                return this.TeamNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNameField, value) != true)) {
                    this.TeamNameField = value;
                    this.RaisePropertyChanged("TeamName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsSuspectDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsSuspectDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppearanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CancelSusReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CheckTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayGradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlightNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameCnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessingResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SeePhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SusReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Appearance {
            get {
                return this.AppearanceField;
            }
            set {
                if ((object.ReferenceEquals(this.AppearanceField, value) != true)) {
                    this.AppearanceField = value;
                    this.RaisePropertyChanged("Appearance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CancelSusReason {
            get {
                return this.CancelSusReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.CancelSusReasonField, value) != true)) {
                    this.CancelSusReasonField = value;
                    this.RaisePropertyChanged("CancelSusReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckChannel {
            get {
                return this.CheckChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckChannelField, value) != true)) {
                    this.CheckChannelField = value;
                    this.RaisePropertyChanged("CheckChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckPerson {
            get {
                return this.CheckPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckPersonField, value) != true)) {
                    this.CheckPersonField = value;
                    this.RaisePropertyChanged("CheckPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckResult {
            get {
                return this.CheckResultField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckResultField, value) != true)) {
                    this.CheckResultField = value;
                    this.RaisePropertyChanged("CheckResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CheckTime {
            get {
                return this.CheckTimeField;
            }
            set {
                if ((this.CheckTimeField.Equals(value) != true)) {
                    this.CheckTimeField = value;
                    this.RaisePropertyChanged("CheckTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayGrade {
            get {
                return this.DisplayGradeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayGradeField, value) != true)) {
                    this.DisplayGradeField = value;
                    this.RaisePropertyChanged("DisplayGrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightNoField, value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNo {
            get {
                return this.IdNoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNoField, value) != true)) {
                    this.IdNoField = value;
                    this.RaisePropertyChanged("IdNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdType {
            get {
                return this.IdTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdTypeField, value) != true)) {
                    this.IdTypeField = value;
                    this.RaisePropertyChanged("IdType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCheck {
            get {
                return this.IsCheckField;
            }
            set {
                if ((this.IsCheckField.Equals(value) != true)) {
                    this.IsCheckField = value;
                    this.RaisePropertyChanged("IsCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameCn {
            get {
                return this.NameCnField;
            }
            set {
                if ((object.ReferenceEquals(this.NameCnField, value) != true)) {
                    this.NameCnField = value;
                    this.RaisePropertyChanged("NameCn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEn {
            get {
                return this.NameEnField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEnField, value) != true)) {
                    this.NameEnField = value;
                    this.RaisePropertyChanged("NameEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessingResult {
            get {
                return this.ProcessingResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessingResultField, value) != true)) {
                    this.ProcessingResultField = value;
                    this.RaisePropertyChanged("ProcessingResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeePhoto {
            get {
                return this.SeePhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.SeePhotoField, value) != true)) {
                    this.SeePhotoField = value;
                    this.RaisePropertyChanged("SeePhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SusReason {
            get {
                return this.SusReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.SusReasonField, value) != true)) {
                    this.SusReasonField = value;
                    this.RaisePropertyChanged("SusReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsContrabandDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsContrabandDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsPullBlackField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsShortcutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PullBlackShowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShowOrderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPullBlack {
            get {
                return this.IsPullBlackField;
            }
            set {
                if ((this.IsPullBlackField.Equals(value) != true)) {
                    this.IsPullBlackField = value;
                    this.RaisePropertyChanged("IsPullBlack");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsShortcut {
            get {
                return this.IsShortcutField;
            }
            set {
                if ((this.IsShortcutField.Equals(value) != true)) {
                    this.IsShortcutField = value;
                    this.RaisePropertyChanged("IsShortcut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PullBlackShow {
            get {
                return this.PullBlackShowField;
            }
            set {
                if ((object.ReferenceEquals(this.PullBlackShowField, value) != true)) {
                    this.PullBlackShowField = value;
                    this.RaisePropertyChanged("PullBlackShow");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShowOrder {
            get {
                return this.ShowOrderField;
            }
            set {
                if ((object.ReferenceEquals(this.ShowOrderField, value) != true)) {
                    this.ShowOrderField = value;
                    this.RaisePropertyChanged("ShowOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Unit {
            get {
                return this.UnitField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitField, value) != true)) {
                    this.UnitField = value;
                    this.RaisePropertyChanged("Unit");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsTemporaryGoodsDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsTemporaryGoodsDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BoardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FlightDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlightNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodsNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GoodsNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodsStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodsTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GoodsUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OperateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassengerCardIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassengerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassengerPhoneNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassengerPhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ReceiveTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverCardIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BoardNo {
            get {
                return this.BoardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.BoardNoField, value) != true)) {
                    this.BoardNoField = value;
                    this.RaisePropertyChanged("BoardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FlightDate {
            get {
                return this.FlightDateField;
            }
            set {
                if ((this.FlightDateField.Equals(value) != true)) {
                    this.FlightDateField = value;
                    this.RaisePropertyChanged("FlightDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightNoField, value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodsName {
            get {
                return this.GoodsNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodsNameField, value) != true)) {
                    this.GoodsNameField = value;
                    this.RaisePropertyChanged("GoodsName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GoodsNumber {
            get {
                return this.GoodsNumberField;
            }
            set {
                if ((this.GoodsNumberField.Equals(value) != true)) {
                    this.GoodsNumberField = value;
                    this.RaisePropertyChanged("GoodsNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodsState {
            get {
                return this.GoodsStateField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodsStateField, value) != true)) {
                    this.GoodsStateField = value;
                    this.RaisePropertyChanged("GoodsState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodsType {
            get {
                return this.GoodsTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodsTypeField, value) != true)) {
                    this.GoodsTypeField = value;
                    this.RaisePropertyChanged("GoodsType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GoodsUnit {
            get {
                return this.GoodsUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.GoodsUnitField, value) != true)) {
                    this.GoodsUnitField = value;
                    this.RaisePropertyChanged("GoodsUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperateTime {
            get {
                return this.OperateTimeField;
            }
            set {
                if ((this.OperateTimeField.Equals(value) != true)) {
                    this.OperateTimeField = value;
                    this.RaisePropertyChanged("OperateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Operator {
            get {
                return this.OperatorField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatorField, value) != true)) {
                    this.OperatorField = value;
                    this.RaisePropertyChanged("Operator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerCardId {
            get {
                return this.PassengerCardIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PassengerCardIdField, value) != true)) {
                    this.PassengerCardIdField = value;
                    this.RaisePropertyChanged("PassengerCardId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerName {
            get {
                return this.PassengerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PassengerNameField, value) != true)) {
                    this.PassengerNameField = value;
                    this.RaisePropertyChanged("PassengerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerPhoneNo {
            get {
                return this.PassengerPhoneNoField;
            }
            set {
                if ((object.ReferenceEquals(this.PassengerPhoneNoField, value) != true)) {
                    this.PassengerPhoneNoField = value;
                    this.RaisePropertyChanged("PassengerPhoneNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassengerPhoto {
            get {
                return this.PassengerPhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PassengerPhotoField, value) != true)) {
                    this.PassengerPhotoField = value;
                    this.RaisePropertyChanged("PassengerPhoto");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ReceiveTime {
            get {
                return this.ReceiveTimeField;
            }
            set {
                if ((this.ReceiveTimeField.Equals(value) != true)) {
                    this.ReceiveTimeField = value;
                    this.RaisePropertyChanged("ReceiveTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReceiverCardId {
            get {
                return this.ReceiverCardIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverCardIdField, value) != true)) {
                    this.ReceiverCardIdField = value;
                    this.RaisePropertyChanged("ReceiverCardId");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcCivilizationDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcCivilizationDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SpecificTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificTypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardIDField, value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificEvent {
            get {
                return this.SpecificEventField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificEventField, value) != true)) {
                    this.SpecificEventField = value;
                    this.RaisePropertyChanged("SpecificEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SpecificTime {
            get {
                return this.SpecificTimeField;
            }
            set {
                if ((this.SpecificTimeField.Equals(value) != true)) {
                    this.SpecificTimeField = value;
                    this.RaisePropertyChanged("SpecificTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificType {
            get {
                return this.SpecificTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificTypeField, value) != true)) {
                    this.SpecificTypeField = value;
                    this.RaisePropertyChanged("SpecificType");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcEventDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcEventDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SpecificTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Staff_NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificEvent {
            get {
                return this.SpecificEventField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificEventField, value) != true)) {
                    this.SpecificEventField = value;
                    this.RaisePropertyChanged("SpecificEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SpecificTime {
            get {
                return this.SpecificTimeField;
            }
            set {
                if ((this.SpecificTimeField.Equals(value) != true)) {
                    this.SpecificTimeField = value;
                    this.RaisePropertyChanged("SpecificTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Staff_Name {
            get {
                return this.Staff_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Staff_NameField, value) != true)) {
                    this.Staff_NameField = value;
                    this.RaisePropertyChanged("Staff_Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcGleanDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcGleanDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Finder_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Goods_ClassifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Goods_CountsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Goods_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> HandleTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Passenger_CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Passenger_GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Passenger_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SpecificTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Staff_NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Finder_Name {
            get {
                return this.Finder_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Finder_NameField, value) != true)) {
                    this.Finder_NameField = value;
                    this.RaisePropertyChanged("Finder_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Goods_Classify {
            get {
                return this.Goods_ClassifyField;
            }
            set {
                if ((object.ReferenceEquals(this.Goods_ClassifyField, value) != true)) {
                    this.Goods_ClassifyField = value;
                    this.RaisePropertyChanged("Goods_Classify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Goods_Counts {
            get {
                return this.Goods_CountsField;
            }
            set {
                if ((object.ReferenceEquals(this.Goods_CountsField, value) != true)) {
                    this.Goods_CountsField = value;
                    this.RaisePropertyChanged("Goods_Counts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Goods_Name {
            get {
                return this.Goods_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Goods_NameField, value) != true)) {
                    this.Goods_NameField = value;
                    this.RaisePropertyChanged("Goods_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> HandleTime {
            get {
                return this.HandleTimeField;
            }
            set {
                if ((this.HandleTimeField.Equals(value) != true)) {
                    this.HandleTimeField = value;
                    this.RaisePropertyChanged("HandleTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passenger_CardID {
            get {
                return this.Passenger_CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.Passenger_CardIDField, value) != true)) {
                    this.Passenger_CardIDField = value;
                    this.RaisePropertyChanged("Passenger_CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passenger_Gender {
            get {
                return this.Passenger_GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.Passenger_GenderField, value) != true)) {
                    this.Passenger_GenderField = value;
                    this.RaisePropertyChanged("Passenger_Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passenger_Name {
            get {
                return this.Passenger_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Passenger_NameField, value) != true)) {
                    this.Passenger_NameField = value;
                    this.RaisePropertyChanged("Passenger_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SpecificTime {
            get {
                return this.SpecificTimeField;
            }
            set {
                if ((this.SpecificTimeField.Equals(value) != true)) {
                    this.SpecificTimeField = value;
                    this.RaisePropertyChanged("SpecificTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Staff_Name {
            get {
                return this.Staff_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Staff_NameField, value) != true)) {
                    this.Staff_NameField = value;
                    this.RaisePropertyChanged("Staff_Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcHandDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcHandDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SpecificTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnitsField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardIDField, value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificEvent {
            get {
                return this.SpecificEventField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificEventField, value) != true)) {
                    this.SpecificEventField = value;
                    this.RaisePropertyChanged("SpecificEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SpecificTime {
            get {
                return this.SpecificTimeField;
            }
            set {
                if ((this.SpecificTimeField.Equals(value) != true)) {
                    this.SpecificTimeField = value;
                    this.RaisePropertyChanged("SpecificTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Units {
            get {
                return this.UnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.UnitsField, value) != true)) {
                    this.UnitsField = value;
                    this.RaisePropertyChanged("Units");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcRewordpunishDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcRewordpunishDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClassifyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SpecificEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> SpecificTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardID {
            get {
                return this.CardIDField;
            }
            set {
                if ((object.ReferenceEquals(this.CardIDField, value) != true)) {
                    this.CardIDField = value;
                    this.RaisePropertyChanged("CardID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Classify {
            get {
                return this.ClassifyField;
            }
            set {
                if ((object.ReferenceEquals(this.ClassifyField, value) != true)) {
                    this.ClassifyField = value;
                    this.RaisePropertyChanged("Classify");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpecificEvent {
            get {
                return this.SpecificEventField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecificEventField, value) != true)) {
                    this.SpecificEventField = value;
                    this.RaisePropertyChanged("SpecificEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SpecificTime {
            get {
                return this.SpecificTimeField;
            }
            set {
                if ((this.SpecificTimeField.Equals(value) != true)) {
                    this.SpecificTimeField = value;
                    this.RaisePropertyChanged("SpecificTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsCameraDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsCameraDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DvrIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChNo {
            get {
                return this.ChNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChNoField, value) != true)) {
                    this.ChNoField = value;
                    this.RaisePropertyChanged("ChNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DvrIp {
            get {
                return this.DvrIpField;
            }
            set {
                if ((object.ReferenceEquals(this.DvrIpField, value) != true)) {
                    this.DvrIpField = value;
                    this.RaisePropertyChanged("DvrIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IP {
            get {
                return this.IPField;
            }
            set {
                if ((object.ReferenceEquals(this.IPField, value) != true)) {
                    this.IPField = value;
                    this.RaisePropertyChanged("IP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsBlacklistDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsBlacklistDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BlockingReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> FlightDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlightNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsRemoveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsRemovestrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime OperateDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperatePeopleField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BlockingReason {
            get {
                return this.BlockingReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.BlockingReasonField, value) != true)) {
                    this.BlockingReasonField = value;
                    this.RaisePropertyChanged("BlockingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> FlightDate {
            get {
                return this.FlightDateField;
            }
            set {
                if ((this.FlightDateField.Equals(value) != true)) {
                    this.FlightDateField = value;
                    this.RaisePropertyChanged("FlightDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightNoField, value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenderName {
            get {
                return this.GenderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderNameField, value) != true)) {
                    this.GenderNameField = value;
                    this.RaisePropertyChanged("GenderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNo {
            get {
                return this.IdNoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNoField, value) != true)) {
                    this.IdNoField = value;
                    this.RaisePropertyChanged("IdNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRemove {
            get {
                return this.IsRemoveField;
            }
            set {
                if ((this.IsRemoveField.Equals(value) != true)) {
                    this.IsRemoveField = value;
                    this.RaisePropertyChanged("IsRemove");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsRemovestr {
            get {
                return this.IsRemovestrField;
            }
            set {
                if ((object.ReferenceEquals(this.IsRemovestrField, value) != true)) {
                    this.IsRemovestrField = value;
                    this.RaisePropertyChanged("IsRemovestr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime OperateDate {
            get {
                return this.OperateDateField;
            }
            set {
                if ((this.OperateDateField.Equals(value) != true)) {
                    this.OperateDateField = value;
                    this.RaisePropertyChanged("OperateDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperatePeople {
            get {
                return this.OperatePeopleField;
            }
            set {
                if ((object.ReferenceEquals(this.OperatePeopleField, value) != true)) {
                    this.OperatePeopleField = value;
                    this.RaisePropertyChanged("OperatePeople");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsSuspectFlightDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsSuspectFlightDto : CanvasDragMove.InfoConfigService.BaseDtoOfguid {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CheckTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartureField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DestinationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndSuspectDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlightNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsCheckstrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTerminateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IsTerminatestrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessingResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartSuspectDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuspectReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminateByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerminateReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> TerminateTimeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckChannel {
            get {
                return this.CheckChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckChannelField, value) != true)) {
                    this.CheckChannelField = value;
                    this.RaisePropertyChanged("CheckChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckPerson {
            get {
                return this.CheckPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckPersonField, value) != true)) {
                    this.CheckPersonField = value;
                    this.RaisePropertyChanged("CheckPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckResult {
            get {
                return this.CheckResultField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckResultField, value) != true)) {
                    this.CheckResultField = value;
                    this.RaisePropertyChanged("CheckResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CheckTime {
            get {
                return this.CheckTimeField;
            }
            set {
                if ((this.CheckTimeField.Equals(value) != true)) {
                    this.CheckTimeField = value;
                    this.RaisePropertyChanged("CheckTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Departure {
            get {
                return this.DepartureField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartureField, value) != true)) {
                    this.DepartureField = value;
                    this.RaisePropertyChanged("Departure");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Destination {
            get {
                return this.DestinationField;
            }
            set {
                if ((object.ReferenceEquals(this.DestinationField, value) != true)) {
                    this.DestinationField = value;
                    this.RaisePropertyChanged("Destination");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndSuspectDate {
            get {
                return this.EndSuspectDateField;
            }
            set {
                if ((this.EndSuspectDateField.Equals(value) != true)) {
                    this.EndSuspectDateField = value;
                    this.RaisePropertyChanged("EndSuspectDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightNoField, value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((this.GradeField.Equals(value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GradeName {
            get {
                return this.GradeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeNameField, value) != true)) {
                    this.GradeNameField = value;
                    this.RaisePropertyChanged("GradeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCheck {
            get {
                return this.IsCheckField;
            }
            set {
                if ((this.IsCheckField.Equals(value) != true)) {
                    this.IsCheckField = value;
                    this.RaisePropertyChanged("IsCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsCheckstr {
            get {
                return this.IsCheckstrField;
            }
            set {
                if ((object.ReferenceEquals(this.IsCheckstrField, value) != true)) {
                    this.IsCheckstrField = value;
                    this.RaisePropertyChanged("IsCheckstr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTerminate {
            get {
                return this.IsTerminateField;
            }
            set {
                if ((this.IsTerminateField.Equals(value) != true)) {
                    this.IsTerminateField = value;
                    this.RaisePropertyChanged("IsTerminate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IsTerminatestr {
            get {
                return this.IsTerminatestrField;
            }
            set {
                if ((object.ReferenceEquals(this.IsTerminatestrField, value) != true)) {
                    this.IsTerminatestrField = value;
                    this.RaisePropertyChanged("IsTerminatestr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessingResult {
            get {
                return this.ProcessingResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessingResultField, value) != true)) {
                    this.ProcessingResultField = value;
                    this.RaisePropertyChanged("ProcessingResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartSuspectDate {
            get {
                return this.StartSuspectDateField;
            }
            set {
                if ((this.StartSuspectDateField.Equals(value) != true)) {
                    this.StartSuspectDateField = value;
                    this.RaisePropertyChanged("StartSuspectDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuspectReason {
            get {
                return this.SuspectReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.SuspectReasonField, value) != true)) {
                    this.SuspectReasonField = value;
                    this.RaisePropertyChanged("SuspectReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminateBy {
            get {
                return this.TerminateByField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminateByField, value) != true)) {
                    this.TerminateByField = value;
                    this.RaisePropertyChanged("TerminateBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TerminateReason {
            get {
                return this.TerminateReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.TerminateReasonField, value) != true)) {
                    this.TerminateReasonField = value;
                    this.RaisePropertyChanged("TerminateReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> TerminateTime {
            get {
                return this.TerminateTimeField;
            }
            set {
                if ((this.TerminateTimeField.Equals(value) != true)) {
                    this.TerminateTimeField = value;
                    this.RaisePropertyChanged("TerminateTime");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FtpServerDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class FtpServerDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarryImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FtpServerAccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FtpServerIpField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FtpServerPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FtpServerPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdCardImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MtmsImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuspectImagePathField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarryImagePath {
            get {
                return this.CarryImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.CarryImagePathField, value) != true)) {
                    this.CarryImagePathField = value;
                    this.RaisePropertyChanged("CarryImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckImagePath {
            get {
                return this.CheckImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckImagePathField, value) != true)) {
                    this.CheckImagePathField = value;
                    this.RaisePropertyChanged("CheckImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FtpServerAccount {
            get {
                return this.FtpServerAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.FtpServerAccountField, value) != true)) {
                    this.FtpServerAccountField = value;
                    this.RaisePropertyChanged("FtpServerAccount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FtpServerIp {
            get {
                return this.FtpServerIpField;
            }
            set {
                if ((object.ReferenceEquals(this.FtpServerIpField, value) != true)) {
                    this.FtpServerIpField = value;
                    this.RaisePropertyChanged("FtpServerIp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FtpServerPassword {
            get {
                return this.FtpServerPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.FtpServerPasswordField, value) != true)) {
                    this.FtpServerPasswordField = value;
                    this.RaisePropertyChanged("FtpServerPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FtpServerPort {
            get {
                return this.FtpServerPortField;
            }
            set {
                if ((this.FtpServerPortField.Equals(value) != true)) {
                    this.FtpServerPortField = value;
                    this.RaisePropertyChanged("FtpServerPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdCardImagePath {
            get {
                return this.IdCardImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.IdCardImagePathField, value) != true)) {
                    this.IdCardImagePathField = value;
                    this.RaisePropertyChanged("IdCardImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MtmsImagePath {
            get {
                return this.MtmsImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.MtmsImagePathField, value) != true)) {
                    this.MtmsImagePathField = value;
                    this.RaisePropertyChanged("MtmsImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityImagePath {
            get {
                return this.SecurityImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityImagePathField, value) != true)) {
                    this.SecurityImagePathField = value;
                    this.RaisePropertyChanged("SecurityImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffImagePath {
            get {
                return this.StaffImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffImagePathField, value) != true)) {
                    this.StaffImagePathField = value;
                    this.RaisePropertyChanged("StaffImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SuspectImagePath {
            get {
                return this.SuspectImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.SuspectImagePathField, value) != true)) {
                    this.SuspectImagePathField = value;
                    this.RaisePropertyChanged("SuspectImagePath");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ScmisMessageDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class ScmisMessageDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> ConfirmTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsConfirmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendByField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SendFromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SendTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.MessageType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmBy {
            get {
                return this.ConfirmByField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmByField, value) != true)) {
                    this.ConfirmByField = value;
                    this.RaisePropertyChanged("ConfirmBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> ConfirmTime {
            get {
                return this.ConfirmTimeField;
            }
            set {
                if ((this.ConfirmTimeField.Equals(value) != true)) {
                    this.ConfirmTimeField = value;
                    this.RaisePropertyChanged("ConfirmTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsConfirm {
            get {
                return this.IsConfirmField;
            }
            set {
                if ((this.IsConfirmField.Equals(value) != true)) {
                    this.IsConfirmField = value;
                    this.RaisePropertyChanged("IsConfirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageText {
            get {
                return this.MessageTextField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageTextField, value) != true)) {
                    this.MessageTextField = value;
                    this.RaisePropertyChanged("MessageText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendBy {
            get {
                return this.SendByField;
            }
            set {
                if ((object.ReferenceEquals(this.SendByField, value) != true)) {
                    this.SendByField = value;
                    this.RaisePropertyChanged("SendBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SendFrom {
            get {
                return this.SendFromField;
            }
            set {
                if ((object.ReferenceEquals(this.SendFromField, value) != true)) {
                    this.SendFromField = value;
                    this.RaisePropertyChanged("SendFrom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SendTime {
            get {
                return this.SendTimeField;
            }
            set {
                if ((this.SendTimeField.Equals(value) != true)) {
                    this.SendTimeField = value;
                    this.RaisePropertyChanged("SendTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.MessageType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageType", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Utility")]
    public enum MessageType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Statistics = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Suspect = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BlackList = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unpack = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Check = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Checkin = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Board = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SuspectFlight = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResult", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.OperationUtil")]
    [System.SerializableAttribute()]
    public partial class OperationResult : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.OperationResultType ResultTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.OperationResultType ResultType {
            get {
                return this.ResultTypeField;
            }
            set {
                if ((this.ResultTypeField.Equals(value) != true)) {
                    this.ResultTypeField = value;
                    this.RaisePropertyChanged("ResultType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationResultType", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.OperationUtil")]
    public enum OperationResultType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Success = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoChange = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysOperationLogListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class SysOperationLogListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.SysOperationLogDto[] OperationLogDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.SysOperationLogDto[] OperationLogDtos {
            get {
                return this.OperationLogDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationLogDtosField, value) != true)) {
                    this.OperationLogDtosField = value;
                    this.RaisePropertyChanged("OperationLogDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysOperationLogDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class SysOperationLogDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string HostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Host {
            get {
                return this.HostField;
            }
            set {
                if ((object.ReferenceEquals(this.HostField, value) != true)) {
                    this.HostField = value;
                    this.RaisePropertyChanged("Host");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Method {
            get {
                return this.MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.MethodField, value) != true)) {
                    this.MethodField = value;
                    this.RaisePropertyChanged("Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsStaffListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsStaffListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsStaffDtoone[] StaffDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsStaffDtoone[] StaffDtos {
            get {
                return this.StaffDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffDtosField, value) != true)) {
                    this.StaffDtosField = value;
                    this.RaisePropertyChanged("StaffDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsSchedualExcelDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsSchedualExcelDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid DepartmentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SchedualDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TeamNamesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid DepartmentId {
            get {
                return this.DepartmentIdField;
            }
            set {
                if ((this.DepartmentIdField.Equals(value) != true)) {
                    this.DepartmentIdField = value;
                    this.RaisePropertyChanged("DepartmentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DepartmentName {
            get {
                return this.DepartmentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentNameField, value) != true)) {
                    this.DepartmentNameField = value;
                    this.RaisePropertyChanged("DepartmentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SchedualDate {
            get {
                return this.SchedualDateField;
            }
            set {
                if ((this.SchedualDateField.Equals(value) != true)) {
                    this.SchedualDateField = value;
                    this.RaisePropertyChanged("SchedualDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TeamNames {
            get {
                return this.TeamNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.TeamNamesField, value) != true)) {
                    this.TeamNamesField = value;
                    this.RaisePropertyChanged("TeamNames");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AttendanceRecordTimeLineListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class AttendanceRecordTimeLineListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsAttendanceRecordGroupDto[] AttendanceRecordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsAttendanceRecordGroupDto[] AttendanceRecords {
            get {
                return this.AttendanceRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.AttendanceRecordsField, value) != true)) {
                    this.AttendanceRecordsField = value;
                    this.RaisePropertyChanged("AttendanceRecords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsAttendanceRecordGroupDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsAttendanceRecordGroupDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassgradesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid StaffIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsAttendanceStaffInfoDto[] StaffRecordsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Passgrades {
            get {
                return this.PassgradesField;
            }
            set {
                if ((object.ReferenceEquals(this.PassgradesField, value) != true)) {
                    this.PassgradesField = value;
                    this.RaisePropertyChanged("Passgrades");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid StaffId {
            get {
                return this.StaffIdField;
            }
            set {
                if ((this.StaffIdField.Equals(value) != true)) {
                    this.StaffIdField = value;
                    this.RaisePropertyChanged("StaffId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaffName {
            get {
                return this.StaffNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffNameField, value) != true)) {
                    this.StaffNameField = value;
                    this.RaisePropertyChanged("StaffName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsAttendanceStaffInfoDto[] StaffRecords {
            get {
                return this.StaffRecordsField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffRecordsField, value) != true)) {
                    this.StaffRecordsField = value;
                    this.RaisePropertyChanged("StaffRecords");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsSuspectListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsSuspectListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsSuspectDto[] BsSuspectDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsSuspectDto[] BsSuspectDtos {
            get {
                return this.BsSuspectDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.BsSuspectDtosField, value) != true)) {
                    this.BsSuspectDtosField = value;
                    this.RaisePropertyChanged("BsSuspectDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsSuspectExcelDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsSuspectExcelDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppearanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> BirthdayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckChannelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckPersonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CheckResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> CheckTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DisplayGradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FlightNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCheckField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameCnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameEnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProcessingResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SusReasonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> UpdateTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Appearance {
            get {
                return this.AppearanceField;
            }
            set {
                if ((object.ReferenceEquals(this.AppearanceField, value) != true)) {
                    this.AppearanceField = value;
                    this.RaisePropertyChanged("Appearance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Birthday {
            get {
                return this.BirthdayField;
            }
            set {
                if ((this.BirthdayField.Equals(value) != true)) {
                    this.BirthdayField = value;
                    this.RaisePropertyChanged("Birthday");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckChannel {
            get {
                return this.CheckChannelField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckChannelField, value) != true)) {
                    this.CheckChannelField = value;
                    this.RaisePropertyChanged("CheckChannel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckPerson {
            get {
                return this.CheckPersonField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckPersonField, value) != true)) {
                    this.CheckPersonField = value;
                    this.RaisePropertyChanged("CheckPerson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CheckResult {
            get {
                return this.CheckResultField;
            }
            set {
                if ((object.ReferenceEquals(this.CheckResultField, value) != true)) {
                    this.CheckResultField = value;
                    this.RaisePropertyChanged("CheckResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CheckTime {
            get {
                return this.CheckTimeField;
            }
            set {
                if ((this.CheckTimeField.Equals(value) != true)) {
                    this.CheckTimeField = value;
                    this.RaisePropertyChanged("CheckTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayGrade {
            get {
                return this.DisplayGradeField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayGradeField, value) != true)) {
                    this.DisplayGradeField = value;
                    this.RaisePropertyChanged("DisplayGrade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FlightNo {
            get {
                return this.FlightNoField;
            }
            set {
                if ((object.ReferenceEquals(this.FlightNoField, value) != true)) {
                    this.FlightNoField = value;
                    this.RaisePropertyChanged("FlightNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdNo {
            get {
                return this.IdNoField;
            }
            set {
                if ((object.ReferenceEquals(this.IdNoField, value) != true)) {
                    this.IdNoField = value;
                    this.RaisePropertyChanged("IdNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdType {
            get {
                return this.IdTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.IdTypeField, value) != true)) {
                    this.IdTypeField = value;
                    this.RaisePropertyChanged("IdType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCheck {
            get {
                return this.IsCheckField;
            }
            set {
                if ((this.IsCheckField.Equals(value) != true)) {
                    this.IsCheckField = value;
                    this.RaisePropertyChanged("IsCheck");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameCn {
            get {
                return this.NameCnField;
            }
            set {
                if ((object.ReferenceEquals(this.NameCnField, value) != true)) {
                    this.NameCnField = value;
                    this.RaisePropertyChanged("NameCn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameEn {
            get {
                return this.NameEnField;
            }
            set {
                if ((object.ReferenceEquals(this.NameEnField, value) != true)) {
                    this.NameEnField = value;
                    this.RaisePropertyChanged("NameEn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProcessingResult {
            get {
                return this.ProcessingResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ProcessingResultField, value) != true)) {
                    this.ProcessingResultField = value;
                    this.RaisePropertyChanged("ProcessingResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SusReason {
            get {
                return this.SusReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.SusReasonField, value) != true)) {
                    this.SusReasonField = value;
                    this.RaisePropertyChanged("SusReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> UpdateTime {
            get {
                return this.UpdateTimeField;
            }
            set {
                if ((this.UpdateTimeField.Equals(value) != true)) {
                    this.UpdateTimeField = value;
                    this.RaisePropertyChanged("UpdateTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsContrabandListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsContrabandListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsContrabandDto[] BsContrabandDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsContrabandDto[] BsContrabandDtos {
            get {
                return this.BsContrabandDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.BsContrabandDtosField, value) != true)) {
                    this.BsContrabandDtosField = value;
                    this.RaisePropertyChanged("BsContrabandDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsTemporaryGoodsListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsTemporaryGoodsListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto[] TemporaryGoodsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto[] TemporaryGoods {
            get {
                return this.TemporaryGoodsField;
            }
            set {
                if ((object.ReferenceEquals(this.TemporaryGoodsField, value) != true)) {
                    this.TemporaryGoodsField = value;
                    this.RaisePropertyChanged("TemporaryGoods");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcCivilizationListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcCivilizationListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.RcCivilizationDto[] RcCivDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.RcCivilizationDto[] RcCivDtos {
            get {
                return this.RcCivDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.RcCivDtosField, value) != true)) {
                    this.RcCivDtosField = value;
                    this.RaisePropertyChanged("RcCivDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcEventListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcEventListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.RcEventDto[] RcEventDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.RcEventDto[] RcEventDtos {
            get {
                return this.RcEventDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.RcEventDtosField, value) != true)) {
                    this.RcEventDtosField = value;
                    this.RaisePropertyChanged("RcEventDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcGleanListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcGleanListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.RcGleanDto[] RcGleDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.RcGleanDto[] RcGleDtos {
            get {
                return this.RcGleDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.RcGleDtosField, value) != true)) {
                    this.RcGleDtosField = value;
                    this.RaisePropertyChanged("RcGleDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcHandListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcHandListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.RcHandDto[] RcHanDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.RcHandDto[] RcHanDtos {
            get {
                return this.RcHanDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.RcHanDtosField, value) != true)) {
                    this.RcHanDtosField = value;
                    this.RaisePropertyChanged("RcHanDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RcRewordpunishListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class RcRewordpunishListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.RcRewordpunishDto[] RcRewDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.RcRewordpunishDto[] RcRewDtos {
            get {
                return this.RcRewDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.RcRewDtosField, value) != true)) {
                    this.RcRewDtosField = value;
                    this.RaisePropertyChanged("RcRewDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysLoginLogListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class SysLoginLogListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.SysLoginLogDto[] LoginLogDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.SysLoginLogDto[] LoginLogDtos {
            get {
                return this.LoginLogDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginLogDtosField, value) != true)) {
                    this.LoginLogDtosField = value;
                    this.RaisePropertyChanged("LoginLogDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SysLoginLogDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class SysLoginLogDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IpAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LoginTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubsystemField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IpAddress {
            get {
                return this.IpAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IpAddressField, value) != true)) {
                    this.IpAddressField = value;
                    this.RaisePropertyChanged("IpAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LoginTime {
            get {
                return this.LoginTimeField;
            }
            set {
                if ((this.LoginTimeField.Equals(value) != true)) {
                    this.LoginTimeField = value;
                    this.RaisePropertyChanged("LoginTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Subsystem {
            get {
                return this.SubsystemField;
            }
            set {
                if ((object.ReferenceEquals(this.SubsystemField, value) != true)) {
                    this.SubsystemField = value;
                    this.RaisePropertyChanged("Subsystem");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsCameraListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsCameraListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsCameraDto[] CameraDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsCameraDto[] CameraDtos {
            get {
                return this.CameraDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.CameraDtosField, value) != true)) {
                    this.CameraDtosField = value;
                    this.RaisePropertyChanged("CameraDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsImportantPassengerDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsImportantPassengerDto : CanvasDragMove.InfoConfigService.BaseDtoOfint {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CardNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FavoriteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CardNo {
            get {
                return this.CardNoField;
            }
            set {
                if ((object.ReferenceEquals(this.CardNoField, value) != true)) {
                    this.CardNoField = value;
                    this.RaisePropertyChanged("CardNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Favorite {
            get {
                return this.FavoriteField;
            }
            set {
                if ((object.ReferenceEquals(this.FavoriteField, value) != true)) {
                    this.FavoriteField = value;
                    this.RaisePropertyChanged("Favorite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseDtoOfint", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(CanvasDragMove.InfoConfigService.BsImportantPassengerDto))]
    public partial class BaseDtoOfint : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedTime {
            get {
                return this.CreatedTimeField;
            }
            set {
                if ((this.CreatedTimeField.Equals(value) != true)) {
                    this.CreatedTimeField = value;
                    this.RaisePropertyChanged("CreatedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsBlacklistListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsBlacklistListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsBlacklistDto[] BlacklistDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsBlacklistDto[] BlacklistDtos {
            get {
                return this.BlacklistDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.BlacklistDtosField, value) != true)) {
                    this.BlacklistDtosField = value;
                    this.RaisePropertyChanged("BlacklistDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BsSuspectFlightListDto", Namespace="http://schemas.datacontract.org/2004/07/Scmis.Services.Models.Dtos")]
    [System.SerializableAttribute()]
    public partial class BsSuspectFlightListDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CanvasDragMove.InfoConfigService.BsSuspectFlightDto[] BsSuspectFlightDtosField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TotalField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CanvasDragMove.InfoConfigService.BsSuspectFlightDto[] BsSuspectFlightDtos {
            get {
                return this.BsSuspectFlightDtosField;
            }
            set {
                if ((object.ReferenceEquals(this.BsSuspectFlightDtosField, value) != true)) {
                    this.BsSuspectFlightDtosField = value;
                    this.RaisePropertyChanged("BsSuspectFlightDtos");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Total {
            get {
                return this.TotalField;
            }
            set {
                if ((this.TotalField.Equals(value) != true)) {
                    this.TotalField = value;
                    this.RaisePropertyChanged("Total");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="InfoConfigService.IInfoConfig")]
    public interface IInfoConfig {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Login", ReplyAction="http://tempuri.org/IBaseService/LoginResponse")]
        CanvasDragMove.InfoConfigService.LoginDto Login(string account, string password, string subsystemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Login", ReplyAction="http://tempuri.org/IBaseService/LoginResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.LoginDto> LoginAsync(string account, string password, string subsystemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/VerifyUserPassword", ReplyAction="http://tempuri.org/IBaseService/VerifyUserPasswordResponse")]
        bool VerifyUserPassword(string account, string password, string subsystemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/VerifyUserPassword", ReplyAction="http://tempuri.org/IBaseService/VerifyUserPasswordResponse")]
        System.Threading.Tasks.Task<bool> VerifyUserPasswordAsync(string account, string password, string subsystemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/UpdateUserPassword", ReplyAction="http://tempuri.org/IBaseService/UpdateUserPasswordResponse")]
        bool UpdateUserPassword(string account, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/UpdateUserPassword", ReplyAction="http://tempuri.org/IBaseService/UpdateUserPasswordResponse")]
        System.Threading.Tasks.Task<bool> UpdateUserPasswordAsync(string account, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/IsHasSubsystemAuth", ReplyAction="http://tempuri.org/IBaseService/IsHasSubsystemAuthResponse")]
        bool IsHasSubsystemAuth(string passgrade, string systemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/IsHasSubsystemAuth", ReplyAction="http://tempuri.org/IBaseService/IsHasSubsystemAuthResponse")]
        System.Threading.Tasks.Task<bool> IsHasSubsystemAuthAsync(string passgrade, string systemName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Heartbeat", ReplyAction="http://tempuri.org/IBaseService/HeartbeatResponse")]
        CanvasDragMove.InfoConfigService.LoginDto Heartbeat(string account, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/Heartbeat", ReplyAction="http://tempuri.org/IBaseService/HeartbeatResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.LoginDto> HeartbeatAsync(string account, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetFtpUpload", ReplyAction="http://tempuri.org/IBaseService/GetFtpUploadResponse")]
        CanvasDragMove.InfoConfigService.CfgParameterDto[] GetFtpUpload();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetFtpUpload", ReplyAction="http://tempuri.org/IBaseService/GetFtpUploadResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.CfgParameterDto[]> GetFtpUploadAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetFtpServerInfo", ReplyAction="http://tempuri.org/IBaseService/GetFtpServerInfoResponse")]
        CanvasDragMove.InfoConfigService.FtpServerDto GetFtpServerInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetFtpServerInfo", ReplyAction="http://tempuri.org/IBaseService/GetFtpServerInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.FtpServerDto> GetFtpServerInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetConfigure", ReplyAction="http://tempuri.org/IBaseService/GetConfigureResponse")]
        CanvasDragMove.InfoConfigService.BsDeviceDto GetConfigure();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetConfigure", ReplyAction="http://tempuri.org/IBaseService/GetConfigureResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsDeviceDto> GetConfigureAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetDeviceRelationIp", ReplyAction="http://tempuri.org/IBaseService/GetDeviceRelationIpResponse")]
        string[] GetDeviceRelationIp();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetDeviceRelationIp", ReplyAction="http://tempuri.org/IBaseService/GetDeviceRelationIpResponse")]
        System.Threading.Tasks.Task<string[]> GetDeviceRelationIpAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/AddScmisMessage", ReplyAction="http://tempuri.org/IBaseService/AddScmisMessageResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddScmisMessage(CanvasDragMove.InfoConfigService.ScmisMessageDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/AddScmisMessage", ReplyAction="http://tempuri.org/IBaseService/AddScmisMessageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddScmisMessageAsync(CanvasDragMove.InfoConfigService.ScmisMessageDto dto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConfirmScmisMessage", ReplyAction="http://tempuri.org/IBaseService/ConfirmScmisMessageResponse")]
        CanvasDragMove.InfoConfigService.OperationResult ConfirmScmisMessage(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/ConfirmScmisMessage", ReplyAction="http://tempuri.org/IBaseService/ConfirmScmisMessageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> ConfirmScmisMessageAsync(System.Guid id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/QueryDictionaryByType", ReplyAction="http://tempuri.org/IBaseService/QueryDictionaryByTypeResponse")]
        CanvasDragMove.InfoConfigService.BsDictionaryDto[] QueryDictionaryByType(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/QueryDictionaryByType", ReplyAction="http://tempuri.org/IBaseService/QueryDictionaryByTypeResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsDictionaryDto[]> QueryDictionaryByTypeAsync(string type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OperationLogAdd", ReplyAction="http://tempuri.org/IBaseService/OperationLogAddResponse")]
        void OperationLogAdd(string method, string type, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/OperationLogAdd", ReplyAction="http://tempuri.org/IBaseService/OperationLogAddResponse")]
        System.Threading.Tasks.Task OperationLogAddAsync(string method, string type, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetAllOperationLogAsPage", ReplyAction="http://tempuri.org/IBaseService/GetAllOperationLogAsPageResponse")]
        CanvasDragMove.InfoConfigService.SysOperationLogListDto GetAllOperationLogAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetAllOperationLogAsPage", ReplyAction="http://tempuri.org/IBaseService/GetAllOperationLogAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysOperationLogListDto> GetAllOperationLogAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetOperationLogsByInfo", ReplyAction="http://tempuri.org/IBaseService/GetOperationLogsByInfoResponse")]
        CanvasDragMove.InfoConfigService.SysOperationLogListDto GetOperationLogsByInfo(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetOperationLogsByInfo", ReplyAction="http://tempuri.org/IBaseService/GetOperationLogsByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysOperationLogListDto> GetOperationLogsByInfoAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetOperationLogsByInfoAndTime", ReplyAction="http://tempuri.org/IBaseService/GetOperationLogsByInfoAndTimeResponse")]
        CanvasDragMove.InfoConfigService.SysOperationLogListDto GetOperationLogsByInfoAndTime(System.DateTime startTime, System.DateTime endTime, string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBaseService/GetOperationLogsByInfoAndTime", ReplyAction="http://tempuri.org/IBaseService/GetOperationLogsByInfoAndTimeResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysOperationLogListDto> GetOperationLogsByInfoAndTimeAsync(System.DateTime startTime, System.DateTime endTime, string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllStaffs", ReplyAction="http://tempuri.org/IInfoConfig/GetAllStaffsResponse")]
        CanvasDragMove.InfoConfigService.BsStaffDto[] GetAllStaffs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllStaffs", ReplyAction="http://tempuri.org/IInfoConfig/GetAllStaffsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffDto[]> GetAllStaffsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllStaffsAsPageone", ReplyAction="http://tempuri.org/IInfoConfig/GetAllStaffsAsPageoneResponse")]
        CanvasDragMove.InfoConfigService.BsStaffListDto GetAllStaffsAsPageone(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllStaffsAsPageone", ReplyAction="http://tempuri.org/IInfoConfig/GetAllStaffsAsPageoneResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffListDto> GetAllStaffsAsPageoneAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsStaffByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsStaffByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsStaffListDto GetBsStaffByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsStaffByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsStaffByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffListDto> GetBsStaffByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsStaffByInfoAsPageone", ReplyAction="http://tempuri.org/IInfoConfig/GetBsStaffByInfoAsPageoneResponse")]
        CanvasDragMove.InfoConfigService.BsStaffListDto GetBsStaffByInfoAsPageone(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsStaffByInfoAsPageone", ReplyAction="http://tempuri.org/IInfoConfig/GetBsStaffByInfoAsPageoneResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffListDto> GetBsStaffByInfoAsPageoneAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsStaff", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsStaffResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteBsStaff(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsStaff", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsStaffResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsStaffAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/BsStaffIsOnline", ReplyAction="http://tempuri.org/IInfoConfig/BsStaffIsOnlineResponse")]
        bool BsStaffIsOnline(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/BsStaffIsOnline", ReplyAction="http://tempuri.org/IInfoConfig/BsStaffIsOnlineResponse")]
        System.Threading.Tasks.Task<bool> BsStaffIsOnlineAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/UpdateStaffIsOnline", ReplyAction="http://tempuri.org/IInfoConfig/UpdateStaffIsOnlineResponse")]
        CanvasDragMove.InfoConfigService.OperationResult UpdateStaffIsOnline(CanvasDragMove.InfoConfigService.BsStaffDtoone[] staffs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/UpdateStaffIsOnline", ReplyAction="http://tempuri.org/IInfoConfig/UpdateStaffIsOnlineResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> UpdateStaffIsOnlineAsync(CanvasDragMove.InfoConfigService.BsStaffDtoone[] staffs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateStaff", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateStaffResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateStaff(string operationType, CanvasDragMove.InfoConfigService.BsStaffDtoone[] staffs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateStaff", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateStaffResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateStaffAsync(string operationType, CanvasDragMove.InfoConfigService.BsStaffDtoone[] staffs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateDepartment", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateDepartmentResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateDepartment(CanvasDragMove.InfoConfigService.BsDepartmentDto department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateDepartment", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateDepartmentResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateDepartmentAsync(CanvasDragMove.InfoConfigService.BsDepartmentDto department);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateTeam", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateTeamResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateTeam(CanvasDragMove.InfoConfigService.BsTeamDto team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateTeam", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateTeamResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateTeamAsync(CanvasDragMove.InfoConfigService.BsTeamDto team);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateTeamStaffs", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateTeamStaffsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateTeamStaffs(System.Guid teamId, string[] staffPassgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateTeamStaffs", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateTeamStaffsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateTeamStaffsAsync(System.Guid teamId, string[] staffPassgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteDepartments", ReplyAction="http://tempuri.org/IInfoConfig/DeleteDepartmentsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteDepartments(System.Guid[] departments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteDepartments", ReplyAction="http://tempuri.org/IInfoConfig/DeleteDepartmentsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteDepartmentsAsync(System.Guid[] departments);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteTeams", ReplyAction="http://tempuri.org/IInfoConfig/DeleteTeamsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteTeams(string[] teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteTeams", ReplyAction="http://tempuri.org/IInfoConfig/DeleteTeamsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteTeamsAsync(string[] teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllDepartment", ReplyAction="http://tempuri.org/IInfoConfig/GetAllDepartmentResponse")]
        CanvasDragMove.InfoConfigService.BsDepartmentDto[] GetAllDepartment();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllDepartment", ReplyAction="http://tempuri.org/IInfoConfig/GetAllDepartmentResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsDepartmentDto[]> GetAllDepartmentAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllDepartmentsWithLeader", ReplyAction="http://tempuri.org/IInfoConfig/GetAllDepartmentsWithLeaderResponse")]
        CanvasDragMove.InfoConfigService.BsDepartmentLeaderDto[] GetAllDepartmentsWithLeader();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllDepartmentsWithLeader", ReplyAction="http://tempuri.org/IInfoConfig/GetAllDepartmentsWithLeaderResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsDepartmentLeaderDto[]> GetAllDepartmentsWithLeaderAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetTeamsByDepartmentId", ReplyAction="http://tempuri.org/IInfoConfig/GetTeamsByDepartmentIdResponse")]
        CanvasDragMove.InfoConfigService.BsTeamDto[] GetTeamsByDepartmentId(System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetTeamsByDepartmentId", ReplyAction="http://tempuri.org/IInfoConfig/GetTeamsByDepartmentIdResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTeamDto[]> GetTeamsByDepartmentIdAsync(System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsByTeamId", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsByTeamIdResponse")]
        CanvasDragMove.InfoConfigService.BsStaffDto[] GetStaffsByTeamId(System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsByTeamId", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsByTeamIdResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffDto[]> GetStaffsByTeamIdAsync(System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllTeams", ReplyAction="http://tempuri.org/IInfoConfig/GetAllTeamsResponse")]
        CanvasDragMove.InfoConfigService.BsTeamDto[] GetAllTeams();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllTeams", ReplyAction="http://tempuri.org/IInfoConfig/GetAllTeamsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTeamDto[]> GetAllTeamsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsByTeam", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsByTeamResponse")]
        CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsByTeam(System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsByTeam", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsByTeamResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsByTeamAsync(System.Guid teamId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllStaffsInRelated", ReplyAction="http://tempuri.org/IInfoConfig/GetAllStaffsInRelatedResponse")]
        CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetAllStaffsInRelated(System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllStaffsInRelated", ReplyAction="http://tempuri.org/IInfoConfig/GetAllStaffsInRelatedResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetAllStaffsInRelatedAsync(System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsWithNoTeam", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsWithNoTeamResponse")]
        CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsWithNoTeam(System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsWithNoTeam", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsWithNoTeamResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsWithNoTeamAsync(System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsWithTeam", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsWithTeamResponse")]
        CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsWithTeam(System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsWithTeam", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsWithTeamResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsWithTeamAsync(System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsInRelated", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsInRelatedResponse")]
        CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsInRelated(string info, System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsInRelated", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsInRelatedResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsInRelatedAsync(string info, System.Guid departmentId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsByInfoResponse")]
        CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsByInfo(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffsByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffsByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsByInfoAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddTeamStaffs", ReplyAction="http://tempuri.org/IInfoConfig/AddTeamStaffsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddTeamStaffs(System.Guid teamId, string passgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddTeamStaffs", ReplyAction="http://tempuri.org/IInfoConfig/AddTeamStaffsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddTeamStaffsAsync(System.Guid teamId, string passgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteStaffFromTeam", ReplyAction="http://tempuri.org/IInfoConfig/DeleteStaffFromTeamResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteStaffFromTeam(System.Guid teamId, string staffPassgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteStaffFromTeam", ReplyAction="http://tempuri.org/IInfoConfig/DeleteStaffFromTeamResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteStaffFromTeamAsync(System.Guid teamId, string staffPassgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/SetTeamLeader", ReplyAction="http://tempuri.org/IInfoConfig/SetTeamLeaderResponse")]
        CanvasDragMove.InfoConfigService.OperationResult SetTeamLeader(System.Guid teamId, string staffPassgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/SetTeamLeader", ReplyAction="http://tempuri.org/IInfoConfig/SetTeamLeaderResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> SetTeamLeaderAsync(System.Guid teamId, string staffPassgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/SetDepartmentLeader", ReplyAction="http://tempuri.org/IInfoConfig/SetDepartmentLeaderResponse")]
        CanvasDragMove.InfoConfigService.OperationResult SetDepartmentLeader(System.Guid departId, string staffPassgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/SetDepartmentLeader", ReplyAction="http://tempuri.org/IInfoConfig/SetDepartmentLeaderResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> SetDepartmentLeaderAsync(System.Guid departId, string staffPassgrades);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetTendaySchedualTableByDate", ReplyAction="http://tempuri.org/IInfoConfig/GetTendaySchedualTableByDateResponse")]
        CanvasDragMove.InfoConfigService.BsSchedualTableDto[] GetTendaySchedualTableByDate(System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetTendaySchedualTableByDate", ReplyAction="http://tempuri.org/IInfoConfig/GetTendaySchedualTableByDateResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSchedualTableDto[]> GetTendaySchedualTableByDateAsync(System.DateTime startDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateScheduals", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateSchedualsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateScheduals(System.DateTime date, System.Guid departmentId, string user, System.Guid[] teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateScheduals", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateSchedualsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateSchedualsAsync(System.DateTime date, System.Guid departmentId, string user, System.Guid[] teams);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetSchedualTeamsByDepartmentIdAndDate", ReplyAction="http://tempuri.org/IInfoConfig/GetSchedualTeamsByDepartmentIdAndDateResponse")]
        CanvasDragMove.InfoConfigService.BsTeamDto[] GetSchedualTeamsByDepartmentIdAndDate(System.Guid departmentId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetSchedualTeamsByDepartmentIdAndDate", ReplyAction="http://tempuri.org/IInfoConfig/GetSchedualTeamsByDepartmentIdAndDateResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTeamDto[]> GetSchedualTeamsByDepartmentIdAndDateAsync(System.Guid departmentId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetMonthSchedualTableByDate", ReplyAction="http://tempuri.org/IInfoConfig/GetMonthSchedualTableByDateResponse")]
        CanvasDragMove.InfoConfigService.BsSchedualExcelDto[] GetMonthSchedualTableByDate(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetMonthSchedualTableByDate", ReplyAction="http://tempuri.org/IInfoConfig/GetMonthSchedualTableByDateResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSchedualExcelDto[]> GetMonthSchedualTableByDateAsync(System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsAttendance", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsAttendanceResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsAttendance(CanvasDragMove.InfoConfigService.BsAttendanceDto[] attendances);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsAttendance", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsAttendanceResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsAttendanceAsync(CanvasDragMove.InfoConfigService.BsAttendanceDto[] attendances);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsAttendance", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsAttendanceResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteBsAttendance(CanvasDragMove.InfoConfigService.BsAttendanceDto[] attendances);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsAttendance", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsAttendanceResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsAttendanceAsync(CanvasDragMove.InfoConfigService.BsAttendanceDto[] attendances);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsAttendances", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsAttendancesResponse")]
        CanvasDragMove.InfoConfigService.BsAttendanceDto[] GetAllBsAttendances();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsAttendances", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsAttendancesResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsAttendanceDto[]> GetAllBsAttendancesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateAttendanceWorkRecord", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateAttendanceWorkRecordResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateAttendanceWorkRecord(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] workRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateAttendanceWorkRecord", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateAttendanceWorkRecordResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateAttendanceWorkRecordAsync(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] workRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAndSetPassResourceByIp", ReplyAction="http://tempuri.org/IInfoConfig/GetAndSetPassResourceByIpResponse")]
        CanvasDragMove.InfoConfigService.BsResourceDto GetAndSetPassResourceByIp(bool isClose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAndSetPassResourceByIp", ReplyAction="http://tempuri.org/IInfoConfig/GetAndSetPassResourceByIpResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsResourceDto> GetAndSetPassResourceByIpAsync(bool isClose);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddPositionStartTime", ReplyAction="http://tempuri.org/IInfoConfig/AddPositionStartTimeResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddPositionStartTime(string staffPass, System.Guid resourceId, string positionType, System.DateTime startTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddPositionStartTime", ReplyAction="http://tempuri.org/IInfoConfig/AddPositionStartTimeResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddPositionStartTimeAsync(string staffPass, System.Guid resourceId, string positionType, System.DateTime startTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddPositionEndTime", ReplyAction="http://tempuri.org/IInfoConfig/AddPositionEndTimeResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddPositionEndTime(System.Guid recordId, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddPositionEndTime", ReplyAction="http://tempuri.org/IInfoConfig/AddPositionEndTimeResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddPositionEndTimeAsync(System.Guid recordId, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/LaidoffAllPosition", ReplyAction="http://tempuri.org/IInfoConfig/LaidoffAllPositionResponse")]
        CanvasDragMove.InfoConfigService.OperationResult LaidoffAllPosition(System.Guid resourceId, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/LaidoffAllPosition", ReplyAction="http://tempuri.org/IInfoConfig/LaidoffAllPositionResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> LaidoffAllPositionAsync(System.Guid resourceId, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffInfoByPositionInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffInfoByPositionInfoResponse")]
        CanvasDragMove.InfoConfigService.BsAttendanceStaffInfoDto[] GetStaffInfoByPositionInfo(System.Guid resourceId, string position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetStaffInfoByPositionInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetStaffInfoByPositionInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsAttendanceStaffInfoDto[]> GetStaffInfoByPositionInfoAsync(System.Guid resourceId, string position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteAttendanceWorkRecord", ReplyAction="http://tempuri.org/IInfoConfig/DeleteAttendanceWorkRecordResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteAttendanceWorkRecord(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] workRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteAttendanceWorkRecord", ReplyAction="http://tempuri.org/IInfoConfig/DeleteAttendanceWorkRecordResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteAttendanceWorkRecordAsync(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] workRecords);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllAttendanceWorkRecords", ReplyAction="http://tempuri.org/IInfoConfig/GetAllAttendanceWorkRecordsResponse")]
        CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] GetAllAttendanceWorkRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllAttendanceWorkRecords", ReplyAction="http://tempuri.org/IInfoConfig/GetAllAttendanceWorkRecordsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[]> GetAllAttendanceWorkRecordsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAttendanceRecordsByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetAttendanceRecordsByInfoResponse")]
        CanvasDragMove.InfoConfigService.AttendanceRecordTimeLineListDto GetAttendanceRecordsByInfo(string info, string passInfo, System.DateTime date, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAttendanceRecordsByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetAttendanceRecordsByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.AttendanceRecordTimeLineListDto> GetAttendanceRecordsByInfoAsync(string info, string passInfo, System.DateTime date, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetPassWorkingStaffRealtimeInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetPassWorkingStaffRealtimeInfoResponse")]
        CanvasDragMove.InfoConfigService.BsAttendanceRecordRealtimeStaffDto[] GetPassWorkingStaffRealtimeInfo(System.Guid resourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetPassWorkingStaffRealtimeInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetPassWorkingStaffRealtimeInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsAttendanceRecordRealtimeStaffDto[]> GetPassWorkingStaffRealtimeInfoAsync(System.Guid resourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetPassResourcesByPassRegion", ReplyAction="http://tempuri.org/IInfoConfig/GetPassResourcesByPassRegionResponse")]
        CanvasDragMove.InfoConfigService.BsResourceDto[] GetPassResourcesByPassRegion(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetPassResourcesByPassRegion", ReplyAction="http://tempuri.org/IInfoConfig/GetPassResourcesByPassRegionResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsResourceDto[]> GetPassResourcesByPassRegionAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsSuspect", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsSuspectResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsSuspect(CanvasDragMove.InfoConfigService.BsSuspectDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsSuspect", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsSuspectResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsSuspectAsync(CanvasDragMove.InfoConfigService.BsSuspectDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsSuspects", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsSuspectsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteBsSuspects(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsSuspects", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsSuspectsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsSuspectsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsSuspectAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsSuspectAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsSuspectListDto GetAllBsSuspectAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsSuspectAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsSuspectAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectListDto> GetAllBsSuspectAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsSuspectByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsSuspectByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsSuspectListDto GetBsSuspectByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsSuspectByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsSuspectByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectListDto> GetBsSuspectByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/ReturnSusPage", ReplyAction="http://tempuri.org/IInfoConfig/ReturnSusPageResponse")]
        CanvasDragMove.InfoConfigService.BsSuspectDto[] ReturnSusPage(int i, int j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/ReturnSusPage", ReplyAction="http://tempuri.org/IInfoConfig/ReturnSusPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectDto[]> ReturnSusPageAsync(int i, int j);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllSuspectExcel", ReplyAction="http://tempuri.org/IInfoConfig/GetAllSuspectExcelResponse")]
        CanvasDragMove.InfoConfigService.BsSuspectExcelDto[] GetAllSuspectExcel();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllSuspectExcel", ReplyAction="http://tempuri.org/IInfoConfig/GetAllSuspectExcelResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectExcelDto[]> GetAllSuspectExcelAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsContraband", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsContrabandResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsContraband(CanvasDragMove.InfoConfigService.BsContrabandDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsContraband", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsContrabandResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsContrabandAsync(CanvasDragMove.InfoConfigService.BsContrabandDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsContraband", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsContrabandResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteBsContraband(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsContraband", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsContrabandResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsContrabandAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsContrabandAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsContrabandAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsContrabandListDto GetAllBsContrabandAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsContrabandAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsContrabandAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsContrabandListDto> GetAllBsContrabandAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsContrabandByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsContrabandByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsContrabandListDto GetBsContrabandByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsContrabandByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsContrabandByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsContrabandListDto> GetBsContrabandByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsTemporaryGoods", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsTemporaryGoodsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsTemporaryGoods(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsTemporaryGoods", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsTemporaryGoodsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsTemporaryGoodsAsync(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsTemporaryGoods", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsTemporaryGoodsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteBsTemporaryGoods(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsTemporaryGoods", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsTemporaryGoodsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsTemporaryGoodsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsTemporaryGoodsAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsTemporaryGoodsAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto GetAllBsTemporaryGoodsAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsTemporaryGoodsAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsTemporaryGoodsAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto> GetAllBsTemporaryGoodsAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsTemporaryGoodsByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsTemporaryGoodsByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto GetBsTemporaryGoodsByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsTemporaryGoodsByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsTemporaryGoodsByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto> GetBsTemporaryGoodsByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsTemporaryGoodsByPassenger", ReplyAction="http://tempuri.org/IInfoConfig/GetBsTemporaryGoodsByPassengerResponse")]
        CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto GetBsTemporaryGoodsByPassenger(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsTemporaryGoodsByPassenger", ReplyAction="http://tempuri.org/IInfoConfig/GetBsTemporaryGoodsByPassengerResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto> GetBsTemporaryGoodsByPassengerAsync(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcCivilization", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcCivilizationResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcCivilization(CanvasDragMove.InfoConfigService.RcCivilizationDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcCivilization", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcCivilizationResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcCivilizationAsync(CanvasDragMove.InfoConfigService.RcCivilizationDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcCivilization", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcCivilizationResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteRcCivilization(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcCivilization", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcCivilizationResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcCivilizationAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcCivilizationByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcCivilizationByInfoResponse")]
        CanvasDragMove.InfoConfigService.RcCivilizationDto[] GetRcCivilizationByInfo(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcCivilizationByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcCivilizationByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcCivilizationDto[]> GetRcCivilizationByInfoAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcCivilizationAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcCivilizationAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcCivilizationListDto GetAllRcCivilizationAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcCivilizationAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcCivilizationAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcCivilizationListDto> GetAllRcCivilizationAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcCivilizationByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcCivilizationByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcCivilizationListDto GetRcCivilizationByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcCivilizationByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcCivilizationByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcCivilizationListDto> GetRcCivilizationByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcEvent", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcEventResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcEvent(CanvasDragMove.InfoConfigService.RcEventDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcEvent", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcEventResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcEventAsync(CanvasDragMove.InfoConfigService.RcEventDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcEvent", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcEventResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteRcEvent(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcEvent", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcEventResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcEventAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcEventByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcEventByInfoResponse")]
        CanvasDragMove.InfoConfigService.RcEventDto[] GetRcEventByInfo(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcEventByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcEventByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcEventDto[]> GetRcEventByInfoAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcEventAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcEventAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcEventListDto GetAllRcEventAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcEventAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcEventAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcEventListDto> GetAllRcEventAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcEventByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcEventByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcEventListDto GetRcEventByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcEventByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcEventByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcEventListDto> GetRcEventByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcGlean", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcGleanResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcGlean(CanvasDragMove.InfoConfigService.RcGleanDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcGlean", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcGleanResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcGleanAsync(CanvasDragMove.InfoConfigService.RcGleanDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcGleanByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcGleanByInfoResponse")]
        CanvasDragMove.InfoConfigService.RcGleanDto[] GetRcGleanByInfo(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcGleanByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcGleanByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcGleanDto[]> GetRcGleanByInfoAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcGlean", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcGleanResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteRcGlean(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcGlean", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcGleanResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcGleanAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcGleanAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcGleanAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcGleanListDto GetAllRcGleanAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcGleanAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcGleanAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcGleanListDto> GetAllRcGleanAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcGleanByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcGleanByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcGleanListDto GetRcGleanByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcGleanByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcGleanByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcGleanListDto> GetRcGleanByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcHand", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcHandResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcHand(CanvasDragMove.InfoConfigService.RcHandDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcHand", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcHandResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcHandAsync(CanvasDragMove.InfoConfigService.RcHandDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcHandByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcHandByInfoResponse")]
        CanvasDragMove.InfoConfigService.RcHandDto[] GetRcHandByInfo(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcHandByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcHandByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcHandDto[]> GetRcHandByInfoAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcHand", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcHandResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteRcHand(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcHand", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcHandResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcHandAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcHandAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcHandAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcHandListDto GetAllRcHandAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcHandAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcHandAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcHandListDto> GetAllRcHandAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcHandByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcHandByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcHandListDto GetRcHandByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcHandByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcHandByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcHandListDto> GetRcHandByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcRewordpunish", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcRewordpunishResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcRewordpunish(CanvasDragMove.InfoConfigService.RcRewordpunishDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRcRewordpunish", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRcRewordpunishResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcRewordpunishAsync(CanvasDragMove.InfoConfigService.RcRewordpunishDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRewordpunishDepartment", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRewordpunishDepartmentResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRewordpunishDepartment(CanvasDragMove.InfoConfigService.RcRewordpunishDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateRewordpunishDepartment", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateRewordpunishDepartmentResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRewordpunishDepartmentAsync(CanvasDragMove.InfoConfigService.RcRewordpunishDto[] records);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcRewordpunishByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcRewordpunishByInfoResponse")]
        CanvasDragMove.InfoConfigService.RcRewordpunishDto[] GetRcRewordpunishByInfo(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcRewordpunishByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetRcRewordpunishByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcRewordpunishDto[]> GetRcRewordpunishByInfoAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcRewordpunish", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcRewordpunishResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteRcRewordpunish(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteRcRewordpunish", ReplyAction="http://tempuri.org/IInfoConfig/DeleteRcRewordpunishResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcRewordpunishAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcRewordpunishAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcRewordpunishAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcRewordpunishListDto GetAllRcRewordpunishAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllRcRewordpunishAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllRcRewordpunishAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcRewordpunishListDto> GetAllRcRewordpunishAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcRewordpunishByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcRewordpunishByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.RcRewordpunishListDto GetRcRewordpunishByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetRcRewordpunishByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetRcRewordpunishByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcRewordpunishListDto> GetRcRewordpunishByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllLoginLogAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllLoginLogAsPageResponse")]
        CanvasDragMove.InfoConfigService.SysLoginLogListDto GetAllLoginLogAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllLoginLogAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllLoginLogAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysLoginLogListDto> GetAllLoginLogAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetLoginLogsByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetLoginLogsByInfoResponse")]
        CanvasDragMove.InfoConfigService.SysLoginLogListDto GetLoginLogsByInfo(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetLoginLogsByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetLoginLogsByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysLoginLogListDto> GetLoginLogsByInfoAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetLoginLogsByInfoAndTime", ReplyAction="http://tempuri.org/IInfoConfig/GetLoginLogsByInfoAndTimeResponse")]
        CanvasDragMove.InfoConfigService.SysLoginLogListDto GetLoginLogsByInfoAndTime(System.DateTime startTime, System.DateTime endTime, string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetLoginLogsByInfoAndTime", ReplyAction="http://tempuri.org/IInfoConfig/GetLoginLogsByInfoAndTimeResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysLoginLogListDto> GetLoginLogsByInfoAndTimeAsync(System.DateTime startTime, System.DateTime endTime, string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsCamera", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsCameraResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsCamera(CanvasDragMove.InfoConfigService.BsCameraDto[] bs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsCamera", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsCameraResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsCameraAsync(CanvasDragMove.InfoConfigService.BsCameraDto[] bs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsCameraByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetBsCameraByInfoResponse")]
        CanvasDragMove.InfoConfigService.BsCameraDto[] GetBsCameraByInfo(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsCameraByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetBsCameraByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraDto[]> GetBsCameraByInfoAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsCameraByResourceId", ReplyAction="http://tempuri.org/IInfoConfig/GetBsCameraByResourceIdResponse")]
        CanvasDragMove.InfoConfigService.BsCameraDto[] GetBsCameraByResourceId(System.Guid resourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsCameraByResourceId", ReplyAction="http://tempuri.org/IInfoConfig/GetBsCameraByResourceIdResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraDto[]> GetBsCameraByResourceIdAsync(System.Guid resourceId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/SetResourceCameraRelations", ReplyAction="http://tempuri.org/IInfoConfig/SetResourceCameraRelationsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult SetResourceCameraRelations(System.Guid resourceId, System.Guid[] cameraIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/SetResourceCameraRelations", ReplyAction="http://tempuri.org/IInfoConfig/SetResourceCameraRelationsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> SetResourceCameraRelationsAsync(System.Guid resourceId, System.Guid[] cameraIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllCamerasAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllCamerasAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsCameraListDto GetAllCamerasAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllCamerasAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllCamerasAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraListDto> GetAllCamerasAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsCameraByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsCameraByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsCameraListDto GetBsCameraByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsCameraByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsCameraByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraListDto> GetBsCameraByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsCamera", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsCameraResponse")]
        CanvasDragMove.InfoConfigService.BsCameraDto[] GetAllBsCamera();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsCamera", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsCameraResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraDto[]> GetAllBsCameraAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeletBsCamera", ReplyAction="http://tempuri.org/IInfoConfig/DeletBsCameraResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeletBsCamera(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeletBsCamera", ReplyAction="http://tempuri.org/IInfoConfig/DeletBsCameraResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeletBsCameraAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllVIP", ReplyAction="http://tempuri.org/IInfoConfig/GetAllVIPResponse")]
        CanvasDragMove.InfoConfigService.BsImportantPassengerDto[] GetAllVIP();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllVIP", ReplyAction="http://tempuri.org/IInfoConfig/GetAllVIPResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsImportantPassengerDto[]> GetAllVIPAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetVipPage", ReplyAction="http://tempuri.org/IInfoConfig/GetVipPageResponse")]
        CanvasDragMove.InfoConfigService.GetVipPageResponse GetVipPage(CanvasDragMove.InfoConfigService.GetVipPageRequest request);
        
        // CODEGEN: 正在生成消息协定，应为该操作具有多个返回值。
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetVipPage", ReplyAction="http://tempuri.org/IInfoConfig/GetVipPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.GetVipPageResponse> GetVipPageAsync(CanvasDragMove.InfoConfigService.GetVipPageRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/VIPAdd", ReplyAction="http://tempuri.org/IInfoConfig/VIPAddResponse")]
        CanvasDragMove.InfoConfigService.OperationResult VIPAdd(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/VIPAdd", ReplyAction="http://tempuri.org/IInfoConfig/VIPAddResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> VIPAddAsync(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/VIPUpdate", ReplyAction="http://tempuri.org/IInfoConfig/VIPUpdateResponse")]
        CanvasDragMove.InfoConfigService.OperationResult VIPUpdate(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/VIPUpdate", ReplyAction="http://tempuri.org/IInfoConfig/VIPUpdateResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> VIPUpdateAsync(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/VIPDelete", ReplyAction="http://tempuri.org/IInfoConfig/VIPDeleteResponse")]
        CanvasDragMove.InfoConfigService.OperationResult VIPDelete(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/VIPDelete", ReplyAction="http://tempuri.org/IInfoConfig/VIPDeleteResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> VIPDeleteAsync(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBlacklistsAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBlacklistsAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsBlacklistListDto GetAllBlacklistsAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBlacklistsAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBlacklistsAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsBlacklistListDto> GetAllBlacklistsAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsBlacklistResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsBlacklist(CanvasDragMove.InfoConfigService.BsBlacklistDto[] bl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsBlacklistResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsBlacklistAsync(CanvasDragMove.InfoConfigService.BsBlacklistDto[] bl);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsBlacklistByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetBsBlacklistByInfoResponse")]
        CanvasDragMove.InfoConfigService.BsBlacklistDto[] GetBsBlacklistByInfo(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsBlacklistByInfo", ReplyAction="http://tempuri.org/IInfoConfig/GetBsBlacklistByInfoResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsBlacklistDto[]> GetBsBlacklistByInfoAsync(string info);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/GetBsBlacklistResponse")]
        CanvasDragMove.InfoConfigService.BsBlacklistDto[] GetBsBlacklist(string Name, string IdNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/GetBsBlacklistResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsBlacklistDto[]> GetBsBlacklistAsync(string Name, string IdNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/HandBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/HandBsBlacklistResponse")]
        CanvasDragMove.InfoConfigService.OperationResult HandBsBlacklist(CanvasDragMove.InfoConfigService.BsBlacklistDto[] blacklist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/HandBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/HandBsBlacklistResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> HandBsBlacklistAsync(CanvasDragMove.InfoConfigService.BsBlacklistDto[] blacklist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/UpdateHandBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/UpdateHandBsBlacklistResponse")]
        CanvasDragMove.InfoConfigService.OperationResult UpdateHandBsBlacklist(CanvasDragMove.InfoConfigService.BsBlacklistDto[] blacklist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/UpdateHandBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/UpdateHandBsBlacklistResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> UpdateHandBsBlacklistAsync(CanvasDragMove.InfoConfigService.BsBlacklistDto[] blacklist);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsBlacklistByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsBlacklistByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsBlacklistListDto GetBsBlacklistByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsBlacklistByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsBlacklistByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsBlacklistListDto> GetBsBlacklistByInfoAsPageAsync(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeletBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/DeletBsBlacklistResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeletBsBlacklist(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeletBsBlacklist", ReplyAction="http://tempuri.org/IInfoConfig/DeletBsBlacklistResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeletBsBlacklistAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsSuspectFlight", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsSuspectFlightResponse")]
        CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsSuspectFlight(CanvasDragMove.InfoConfigService.BsSuspectFlightDto[] bs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/AddOrUpdateBsSuspectFlight", ReplyAction="http://tempuri.org/IInfoConfig/AddOrUpdateBsSuspectFlightResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsSuspectFlightAsync(CanvasDragMove.InfoConfigService.BsSuspectFlightDto[] bs);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsSuspectFlights", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsSuspectFlightsResponse")]
        CanvasDragMove.InfoConfigService.OperationResult DeleteBsSuspectFlights(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/DeleteBsSuspectFlights", ReplyAction="http://tempuri.org/IInfoConfig/DeleteBsSuspectFlightsResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsSuspectFlightsAsync(System.Guid[] ids);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsSuspectFlightAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsSuspectFlightAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsSuspectFlightListDto GetAllBsSuspectFlightAsPage(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetAllBsSuspectFlightAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetAllBsSuspectFlightAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectFlightListDto> GetAllBsSuspectFlightAsPageAsync(int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsSuspectFlightByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsSuspectFlightByInfoAsPageResponse")]
        CanvasDragMove.InfoConfigService.BsSuspectFlightListDto GetBsSuspectFlightByInfoAsPage(string info, int pageIndex, int pageSize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IInfoConfig/GetBsSuspectFlightByInfoAsPage", ReplyAction="http://tempuri.org/IInfoConfig/GetBsSuspectFlightByInfoAsPageResponse")]
        System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectFlightListDto> GetBsSuspectFlightByInfoAsPageAsync(string info, int pageIndex, int pageSize);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVipPage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVipPageRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int index;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int pageCount;
        
        public GetVipPageRequest() {
        }
        
        public GetVipPageRequest(int index, int pageCount) {
            this.index = index;
            this.pageCount = pageCount;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVipPageResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetVipPageResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public CanvasDragMove.InfoConfigService.BsImportantPassengerDto[] GetVipPageResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int total;
        
        public GetVipPageResponse() {
        }
        
        public GetVipPageResponse(CanvasDragMove.InfoConfigService.BsImportantPassengerDto[] GetVipPageResult, int total) {
            this.GetVipPageResult = GetVipPageResult;
            this.total = total;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IInfoConfigChannel : CanvasDragMove.InfoConfigService.IInfoConfig, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InfoConfigClient : System.ServiceModel.ClientBase<CanvasDragMove.InfoConfigService.IInfoConfig>, CanvasDragMove.InfoConfigService.IInfoConfig {
        
        public InfoConfigClient() {
        }
        
        public InfoConfigClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public InfoConfigClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InfoConfigClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public InfoConfigClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CanvasDragMove.InfoConfigService.LoginDto Login(string account, string password, string subsystemName) {
            return base.Channel.Login(account, password, subsystemName);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.LoginDto> LoginAsync(string account, string password, string subsystemName) {
            return base.Channel.LoginAsync(account, password, subsystemName);
        }
        
        public bool VerifyUserPassword(string account, string password, string subsystemName) {
            return base.Channel.VerifyUserPassword(account, password, subsystemName);
        }
        
        public System.Threading.Tasks.Task<bool> VerifyUserPasswordAsync(string account, string password, string subsystemName) {
            return base.Channel.VerifyUserPasswordAsync(account, password, subsystemName);
        }
        
        public bool UpdateUserPassword(string account, string newPassword) {
            return base.Channel.UpdateUserPassword(account, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateUserPasswordAsync(string account, string newPassword) {
            return base.Channel.UpdateUserPasswordAsync(account, newPassword);
        }
        
        public bool IsHasSubsystemAuth(string passgrade, string systemName) {
            return base.Channel.IsHasSubsystemAuth(passgrade, systemName);
        }
        
        public System.Threading.Tasks.Task<bool> IsHasSubsystemAuthAsync(string passgrade, string systemName) {
            return base.Channel.IsHasSubsystemAuthAsync(passgrade, systemName);
        }
        
        public CanvasDragMove.InfoConfigService.LoginDto Heartbeat(string account, string token) {
            return base.Channel.Heartbeat(account, token);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.LoginDto> HeartbeatAsync(string account, string token) {
            return base.Channel.HeartbeatAsync(account, token);
        }
        
        public CanvasDragMove.InfoConfigService.CfgParameterDto[] GetFtpUpload() {
            return base.Channel.GetFtpUpload();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.CfgParameterDto[]> GetFtpUploadAsync() {
            return base.Channel.GetFtpUploadAsync();
        }
        
        public CanvasDragMove.InfoConfigService.FtpServerDto GetFtpServerInfo() {
            return base.Channel.GetFtpServerInfo();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.FtpServerDto> GetFtpServerInfoAsync() {
            return base.Channel.GetFtpServerInfoAsync();
        }
        
        public CanvasDragMove.InfoConfigService.BsDeviceDto GetConfigure() {
            return base.Channel.GetConfigure();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsDeviceDto> GetConfigureAsync() {
            return base.Channel.GetConfigureAsync();
        }
        
        public string[] GetDeviceRelationIp() {
            return base.Channel.GetDeviceRelationIp();
        }
        
        public System.Threading.Tasks.Task<string[]> GetDeviceRelationIpAsync() {
            return base.Channel.GetDeviceRelationIpAsync();
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddScmisMessage(CanvasDragMove.InfoConfigService.ScmisMessageDto dto) {
            return base.Channel.AddScmisMessage(dto);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddScmisMessageAsync(CanvasDragMove.InfoConfigService.ScmisMessageDto dto) {
            return base.Channel.AddScmisMessageAsync(dto);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult ConfirmScmisMessage(System.Guid id) {
            return base.Channel.ConfirmScmisMessage(id);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> ConfirmScmisMessageAsync(System.Guid id) {
            return base.Channel.ConfirmScmisMessageAsync(id);
        }
        
        public CanvasDragMove.InfoConfigService.BsDictionaryDto[] QueryDictionaryByType(string type) {
            return base.Channel.QueryDictionaryByType(type);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsDictionaryDto[]> QueryDictionaryByTypeAsync(string type) {
            return base.Channel.QueryDictionaryByTypeAsync(type);
        }
        
        public void OperationLogAdd(string method, string type, string message) {
            base.Channel.OperationLogAdd(method, type, message);
        }
        
        public System.Threading.Tasks.Task OperationLogAddAsync(string method, string type, string message) {
            return base.Channel.OperationLogAddAsync(method, type, message);
        }
        
        public CanvasDragMove.InfoConfigService.SysOperationLogListDto GetAllOperationLogAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllOperationLogAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysOperationLogListDto> GetAllOperationLogAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllOperationLogAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.SysOperationLogListDto GetOperationLogsByInfo(string info, int pageIndex, int pageSize) {
            return base.Channel.GetOperationLogsByInfo(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysOperationLogListDto> GetOperationLogsByInfoAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetOperationLogsByInfoAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.SysOperationLogListDto GetOperationLogsByInfoAndTime(System.DateTime startTime, System.DateTime endTime, string info, int pageIndex, int pageSize) {
            return base.Channel.GetOperationLogsByInfoAndTime(startTime, endTime, info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysOperationLogListDto> GetOperationLogsByInfoAndTimeAsync(System.DateTime startTime, System.DateTime endTime, string info, int pageIndex, int pageSize) {
            return base.Channel.GetOperationLogsByInfoAndTimeAsync(startTime, endTime, info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffDto[] GetAllStaffs() {
            return base.Channel.GetAllStaffs();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffDto[]> GetAllStaffsAsync() {
            return base.Channel.GetAllStaffsAsync();
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffListDto GetAllStaffsAsPageone(int pageIndex, int pageSize) {
            return base.Channel.GetAllStaffsAsPageone(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffListDto> GetAllStaffsAsPageoneAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllStaffsAsPageoneAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffListDto GetBsStaffByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsStaffByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffListDto> GetBsStaffByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsStaffByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffListDto GetBsStaffByInfoAsPageone(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsStaffByInfoAsPageone(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffListDto> GetBsStaffByInfoAsPageoneAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsStaffByInfoAsPageoneAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteBsStaff(System.Guid[] ids) {
            return base.Channel.DeleteBsStaff(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsStaffAsync(System.Guid[] ids) {
            return base.Channel.DeleteBsStaffAsync(ids);
        }
        
        public bool BsStaffIsOnline(System.Guid[] ids) {
            return base.Channel.BsStaffIsOnline(ids);
        }
        
        public System.Threading.Tasks.Task<bool> BsStaffIsOnlineAsync(System.Guid[] ids) {
            return base.Channel.BsStaffIsOnlineAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult UpdateStaffIsOnline(CanvasDragMove.InfoConfigService.BsStaffDtoone[] staffs) {
            return base.Channel.UpdateStaffIsOnline(staffs);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> UpdateStaffIsOnlineAsync(CanvasDragMove.InfoConfigService.BsStaffDtoone[] staffs) {
            return base.Channel.UpdateStaffIsOnlineAsync(staffs);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateStaff(string operationType, CanvasDragMove.InfoConfigService.BsStaffDtoone[] staffs) {
            return base.Channel.AddOrUpdateStaff(operationType, staffs);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateStaffAsync(string operationType, CanvasDragMove.InfoConfigService.BsStaffDtoone[] staffs) {
            return base.Channel.AddOrUpdateStaffAsync(operationType, staffs);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateDepartment(CanvasDragMove.InfoConfigService.BsDepartmentDto department) {
            return base.Channel.AddOrUpdateDepartment(department);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateDepartmentAsync(CanvasDragMove.InfoConfigService.BsDepartmentDto department) {
            return base.Channel.AddOrUpdateDepartmentAsync(department);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateTeam(CanvasDragMove.InfoConfigService.BsTeamDto team) {
            return base.Channel.AddOrUpdateTeam(team);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateTeamAsync(CanvasDragMove.InfoConfigService.BsTeamDto team) {
            return base.Channel.AddOrUpdateTeamAsync(team);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateTeamStaffs(System.Guid teamId, string[] staffPassgrades) {
            return base.Channel.AddOrUpdateTeamStaffs(teamId, staffPassgrades);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateTeamStaffsAsync(System.Guid teamId, string[] staffPassgrades) {
            return base.Channel.AddOrUpdateTeamStaffsAsync(teamId, staffPassgrades);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteDepartments(System.Guid[] departments) {
            return base.Channel.DeleteDepartments(departments);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteDepartmentsAsync(System.Guid[] departments) {
            return base.Channel.DeleteDepartmentsAsync(departments);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteTeams(string[] teams) {
            return base.Channel.DeleteTeams(teams);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteTeamsAsync(string[] teams) {
            return base.Channel.DeleteTeamsAsync(teams);
        }
        
        public CanvasDragMove.InfoConfigService.BsDepartmentDto[] GetAllDepartment() {
            return base.Channel.GetAllDepartment();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsDepartmentDto[]> GetAllDepartmentAsync() {
            return base.Channel.GetAllDepartmentAsync();
        }
        
        public CanvasDragMove.InfoConfigService.BsDepartmentLeaderDto[] GetAllDepartmentsWithLeader() {
            return base.Channel.GetAllDepartmentsWithLeader();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsDepartmentLeaderDto[]> GetAllDepartmentsWithLeaderAsync() {
            return base.Channel.GetAllDepartmentsWithLeaderAsync();
        }
        
        public CanvasDragMove.InfoConfigService.BsTeamDto[] GetTeamsByDepartmentId(System.Guid departmentId) {
            return base.Channel.GetTeamsByDepartmentId(departmentId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTeamDto[]> GetTeamsByDepartmentIdAsync(System.Guid departmentId) {
            return base.Channel.GetTeamsByDepartmentIdAsync(departmentId);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffDto[] GetStaffsByTeamId(System.Guid teamId) {
            return base.Channel.GetStaffsByTeamId(teamId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffDto[]> GetStaffsByTeamIdAsync(System.Guid teamId) {
            return base.Channel.GetStaffsByTeamIdAsync(teamId);
        }
        
        public CanvasDragMove.InfoConfigService.BsTeamDto[] GetAllTeams() {
            return base.Channel.GetAllTeams();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTeamDto[]> GetAllTeamsAsync() {
            return base.Channel.GetAllTeamsAsync();
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsByTeam(System.Guid teamId) {
            return base.Channel.GetStaffsByTeam(teamId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsByTeamAsync(System.Guid teamId) {
            return base.Channel.GetStaffsByTeamAsync(teamId);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetAllStaffsInRelated(System.Guid departmentId) {
            return base.Channel.GetAllStaffsInRelated(departmentId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetAllStaffsInRelatedAsync(System.Guid departmentId) {
            return base.Channel.GetAllStaffsInRelatedAsync(departmentId);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsWithNoTeam(System.Guid departmentId) {
            return base.Channel.GetStaffsWithNoTeam(departmentId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsWithNoTeamAsync(System.Guid departmentId) {
            return base.Channel.GetStaffsWithNoTeamAsync(departmentId);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsWithTeam(System.Guid departmentId) {
            return base.Channel.GetStaffsWithTeam(departmentId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsWithTeamAsync(System.Guid departmentId) {
            return base.Channel.GetStaffsWithTeamAsync(departmentId);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsInRelated(string info, System.Guid departmentId) {
            return base.Channel.GetStaffsInRelated(info, departmentId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsInRelatedAsync(string info, System.Guid departmentId) {
            return base.Channel.GetStaffsInRelatedAsync(info, departmentId);
        }
        
        public CanvasDragMove.InfoConfigService.BsStaffTeamDto[] GetStaffsByInfo(string info) {
            return base.Channel.GetStaffsByInfo(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsStaffTeamDto[]> GetStaffsByInfoAsync(string info) {
            return base.Channel.GetStaffsByInfoAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddTeamStaffs(System.Guid teamId, string passgrades) {
            return base.Channel.AddTeamStaffs(teamId, passgrades);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddTeamStaffsAsync(System.Guid teamId, string passgrades) {
            return base.Channel.AddTeamStaffsAsync(teamId, passgrades);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteStaffFromTeam(System.Guid teamId, string staffPassgrades) {
            return base.Channel.DeleteStaffFromTeam(teamId, staffPassgrades);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteStaffFromTeamAsync(System.Guid teamId, string staffPassgrades) {
            return base.Channel.DeleteStaffFromTeamAsync(teamId, staffPassgrades);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult SetTeamLeader(System.Guid teamId, string staffPassgrades) {
            return base.Channel.SetTeamLeader(teamId, staffPassgrades);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> SetTeamLeaderAsync(System.Guid teamId, string staffPassgrades) {
            return base.Channel.SetTeamLeaderAsync(teamId, staffPassgrades);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult SetDepartmentLeader(System.Guid departId, string staffPassgrades) {
            return base.Channel.SetDepartmentLeader(departId, staffPassgrades);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> SetDepartmentLeaderAsync(System.Guid departId, string staffPassgrades) {
            return base.Channel.SetDepartmentLeaderAsync(departId, staffPassgrades);
        }
        
        public CanvasDragMove.InfoConfigService.BsSchedualTableDto[] GetTendaySchedualTableByDate(System.DateTime startDate) {
            return base.Channel.GetTendaySchedualTableByDate(startDate);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSchedualTableDto[]> GetTendaySchedualTableByDateAsync(System.DateTime startDate) {
            return base.Channel.GetTendaySchedualTableByDateAsync(startDate);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateScheduals(System.DateTime date, System.Guid departmentId, string user, System.Guid[] teams) {
            return base.Channel.AddOrUpdateScheduals(date, departmentId, user, teams);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateSchedualsAsync(System.DateTime date, System.Guid departmentId, string user, System.Guid[] teams) {
            return base.Channel.AddOrUpdateSchedualsAsync(date, departmentId, user, teams);
        }
        
        public CanvasDragMove.InfoConfigService.BsTeamDto[] GetSchedualTeamsByDepartmentIdAndDate(System.Guid departmentId, System.DateTime date) {
            return base.Channel.GetSchedualTeamsByDepartmentIdAndDate(departmentId, date);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTeamDto[]> GetSchedualTeamsByDepartmentIdAndDateAsync(System.Guid departmentId, System.DateTime date) {
            return base.Channel.GetSchedualTeamsByDepartmentIdAndDateAsync(departmentId, date);
        }
        
        public CanvasDragMove.InfoConfigService.BsSchedualExcelDto[] GetMonthSchedualTableByDate(System.DateTime date) {
            return base.Channel.GetMonthSchedualTableByDate(date);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSchedualExcelDto[]> GetMonthSchedualTableByDateAsync(System.DateTime date) {
            return base.Channel.GetMonthSchedualTableByDateAsync(date);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsAttendance(CanvasDragMove.InfoConfigService.BsAttendanceDto[] attendances) {
            return base.Channel.AddOrUpdateBsAttendance(attendances);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsAttendanceAsync(CanvasDragMove.InfoConfigService.BsAttendanceDto[] attendances) {
            return base.Channel.AddOrUpdateBsAttendanceAsync(attendances);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteBsAttendance(CanvasDragMove.InfoConfigService.BsAttendanceDto[] attendances) {
            return base.Channel.DeleteBsAttendance(attendances);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsAttendanceAsync(CanvasDragMove.InfoConfigService.BsAttendanceDto[] attendances) {
            return base.Channel.DeleteBsAttendanceAsync(attendances);
        }
        
        public CanvasDragMove.InfoConfigService.BsAttendanceDto[] GetAllBsAttendances() {
            return base.Channel.GetAllBsAttendances();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsAttendanceDto[]> GetAllBsAttendancesAsync() {
            return base.Channel.GetAllBsAttendancesAsync();
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateAttendanceWorkRecord(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] workRecords) {
            return base.Channel.AddOrUpdateAttendanceWorkRecord(workRecords);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateAttendanceWorkRecordAsync(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] workRecords) {
            return base.Channel.AddOrUpdateAttendanceWorkRecordAsync(workRecords);
        }
        
        public CanvasDragMove.InfoConfigService.BsResourceDto GetAndSetPassResourceByIp(bool isClose) {
            return base.Channel.GetAndSetPassResourceByIp(isClose);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsResourceDto> GetAndSetPassResourceByIpAsync(bool isClose) {
            return base.Channel.GetAndSetPassResourceByIpAsync(isClose);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddPositionStartTime(string staffPass, System.Guid resourceId, string positionType, System.DateTime startTime) {
            return base.Channel.AddPositionStartTime(staffPass, resourceId, positionType, startTime);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddPositionStartTimeAsync(string staffPass, System.Guid resourceId, string positionType, System.DateTime startTime) {
            return base.Channel.AddPositionStartTimeAsync(staffPass, resourceId, positionType, startTime);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddPositionEndTime(System.Guid recordId, System.DateTime endTime) {
            return base.Channel.AddPositionEndTime(recordId, endTime);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddPositionEndTimeAsync(System.Guid recordId, System.DateTime endTime) {
            return base.Channel.AddPositionEndTimeAsync(recordId, endTime);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult LaidoffAllPosition(System.Guid resourceId, System.DateTime endTime) {
            return base.Channel.LaidoffAllPosition(resourceId, endTime);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> LaidoffAllPositionAsync(System.Guid resourceId, System.DateTime endTime) {
            return base.Channel.LaidoffAllPositionAsync(resourceId, endTime);
        }
        
        public CanvasDragMove.InfoConfigService.BsAttendanceStaffInfoDto[] GetStaffInfoByPositionInfo(System.Guid resourceId, string position) {
            return base.Channel.GetStaffInfoByPositionInfo(resourceId, position);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsAttendanceStaffInfoDto[]> GetStaffInfoByPositionInfoAsync(System.Guid resourceId, string position) {
            return base.Channel.GetStaffInfoByPositionInfoAsync(resourceId, position);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteAttendanceWorkRecord(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] workRecords) {
            return base.Channel.DeleteAttendanceWorkRecord(workRecords);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteAttendanceWorkRecordAsync(CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] workRecords) {
            return base.Channel.DeleteAttendanceWorkRecordAsync(workRecords);
        }
        
        public CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[] GetAllAttendanceWorkRecords() {
            return base.Channel.GetAllAttendanceWorkRecords();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsAttendanceWorkRecordDto[]> GetAllAttendanceWorkRecordsAsync() {
            return base.Channel.GetAllAttendanceWorkRecordsAsync();
        }
        
        public CanvasDragMove.InfoConfigService.AttendanceRecordTimeLineListDto GetAttendanceRecordsByInfo(string info, string passInfo, System.DateTime date, int pageIndex, int pageSize) {
            return base.Channel.GetAttendanceRecordsByInfo(info, passInfo, date, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.AttendanceRecordTimeLineListDto> GetAttendanceRecordsByInfoAsync(string info, string passInfo, System.DateTime date, int pageIndex, int pageSize) {
            return base.Channel.GetAttendanceRecordsByInfoAsync(info, passInfo, date, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsAttendanceRecordRealtimeStaffDto[] GetPassWorkingStaffRealtimeInfo(System.Guid resourceId) {
            return base.Channel.GetPassWorkingStaffRealtimeInfo(resourceId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsAttendanceRecordRealtimeStaffDto[]> GetPassWorkingStaffRealtimeInfoAsync(System.Guid resourceId) {
            return base.Channel.GetPassWorkingStaffRealtimeInfoAsync(resourceId);
        }
        
        public CanvasDragMove.InfoConfigService.BsResourceDto[] GetPassResourcesByPassRegion(string info) {
            return base.Channel.GetPassResourcesByPassRegion(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsResourceDto[]> GetPassResourcesByPassRegionAsync(string info) {
            return base.Channel.GetPassResourcesByPassRegionAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsSuspect(CanvasDragMove.InfoConfigService.BsSuspectDto[] records) {
            return base.Channel.AddOrUpdateBsSuspect(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsSuspectAsync(CanvasDragMove.InfoConfigService.BsSuspectDto[] records) {
            return base.Channel.AddOrUpdateBsSuspectAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteBsSuspects(System.Guid[] ids) {
            return base.Channel.DeleteBsSuspects(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsSuspectsAsync(System.Guid[] ids) {
            return base.Channel.DeleteBsSuspectsAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.BsSuspectListDto GetAllBsSuspectAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllBsSuspectAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectListDto> GetAllBsSuspectAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllBsSuspectAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsSuspectListDto GetBsSuspectByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsSuspectByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectListDto> GetBsSuspectByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsSuspectByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsSuspectDto[] ReturnSusPage(int i, int j) {
            return base.Channel.ReturnSusPage(i, j);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectDto[]> ReturnSusPageAsync(int i, int j) {
            return base.Channel.ReturnSusPageAsync(i, j);
        }
        
        public CanvasDragMove.InfoConfigService.BsSuspectExcelDto[] GetAllSuspectExcel() {
            return base.Channel.GetAllSuspectExcel();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectExcelDto[]> GetAllSuspectExcelAsync() {
            return base.Channel.GetAllSuspectExcelAsync();
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsContraband(CanvasDragMove.InfoConfigService.BsContrabandDto[] records) {
            return base.Channel.AddOrUpdateBsContraband(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsContrabandAsync(CanvasDragMove.InfoConfigService.BsContrabandDto[] records) {
            return base.Channel.AddOrUpdateBsContrabandAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteBsContraband(System.Guid[] ids) {
            return base.Channel.DeleteBsContraband(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsContrabandAsync(System.Guid[] ids) {
            return base.Channel.DeleteBsContrabandAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.BsContrabandListDto GetAllBsContrabandAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllBsContrabandAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsContrabandListDto> GetAllBsContrabandAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllBsContrabandAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsContrabandListDto GetBsContrabandByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsContrabandByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsContrabandListDto> GetBsContrabandByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsContrabandByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsTemporaryGoods(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto[] records) {
            return base.Channel.AddOrUpdateBsTemporaryGoods(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsTemporaryGoodsAsync(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto[] records) {
            return base.Channel.AddOrUpdateBsTemporaryGoodsAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteBsTemporaryGoods(System.Guid[] ids) {
            return base.Channel.DeleteBsTemporaryGoods(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsTemporaryGoodsAsync(System.Guid[] ids) {
            return base.Channel.DeleteBsTemporaryGoodsAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto GetAllBsTemporaryGoodsAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllBsTemporaryGoodsAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto> GetAllBsTemporaryGoodsAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllBsTemporaryGoodsAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto GetBsTemporaryGoodsByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsTemporaryGoodsByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto> GetBsTemporaryGoodsByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsTemporaryGoodsByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto GetBsTemporaryGoodsByPassenger(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto records) {
            return base.Channel.GetBsTemporaryGoodsByPassenger(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsTemporaryGoodsListDto> GetBsTemporaryGoodsByPassengerAsync(CanvasDragMove.InfoConfigService.BsTemporaryGoodsDto records) {
            return base.Channel.GetBsTemporaryGoodsByPassengerAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcCivilization(CanvasDragMove.InfoConfigService.RcCivilizationDto[] records) {
            return base.Channel.AddOrUpdateRcCivilization(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcCivilizationAsync(CanvasDragMove.InfoConfigService.RcCivilizationDto[] records) {
            return base.Channel.AddOrUpdateRcCivilizationAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteRcCivilization(System.Guid[] ids) {
            return base.Channel.DeleteRcCivilization(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcCivilizationAsync(System.Guid[] ids) {
            return base.Channel.DeleteRcCivilizationAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.RcCivilizationDto[] GetRcCivilizationByInfo(string info) {
            return base.Channel.GetRcCivilizationByInfo(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcCivilizationDto[]> GetRcCivilizationByInfoAsync(string info) {
            return base.Channel.GetRcCivilizationByInfoAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.RcCivilizationListDto GetAllRcCivilizationAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcCivilizationAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcCivilizationListDto> GetAllRcCivilizationAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcCivilizationAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.RcCivilizationListDto GetRcCivilizationByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcCivilizationByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcCivilizationListDto> GetRcCivilizationByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcCivilizationByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcEvent(CanvasDragMove.InfoConfigService.RcEventDto[] records) {
            return base.Channel.AddOrUpdateRcEvent(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcEventAsync(CanvasDragMove.InfoConfigService.RcEventDto[] records) {
            return base.Channel.AddOrUpdateRcEventAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteRcEvent(System.Guid[] ids) {
            return base.Channel.DeleteRcEvent(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcEventAsync(System.Guid[] ids) {
            return base.Channel.DeleteRcEventAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.RcEventDto[] GetRcEventByInfo(string info) {
            return base.Channel.GetRcEventByInfo(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcEventDto[]> GetRcEventByInfoAsync(string info) {
            return base.Channel.GetRcEventByInfoAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.RcEventListDto GetAllRcEventAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcEventAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcEventListDto> GetAllRcEventAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcEventAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.RcEventListDto GetRcEventByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcEventByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcEventListDto> GetRcEventByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcEventByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcGlean(CanvasDragMove.InfoConfigService.RcGleanDto[] records) {
            return base.Channel.AddOrUpdateRcGlean(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcGleanAsync(CanvasDragMove.InfoConfigService.RcGleanDto[] records) {
            return base.Channel.AddOrUpdateRcGleanAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.RcGleanDto[] GetRcGleanByInfo(string info) {
            return base.Channel.GetRcGleanByInfo(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcGleanDto[]> GetRcGleanByInfoAsync(string info) {
            return base.Channel.GetRcGleanByInfoAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteRcGlean(System.Guid[] ids) {
            return base.Channel.DeleteRcGlean(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcGleanAsync(System.Guid[] ids) {
            return base.Channel.DeleteRcGleanAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.RcGleanListDto GetAllRcGleanAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcGleanAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcGleanListDto> GetAllRcGleanAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcGleanAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.RcGleanListDto GetRcGleanByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcGleanByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcGleanListDto> GetRcGleanByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcGleanByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcHand(CanvasDragMove.InfoConfigService.RcHandDto[] records) {
            return base.Channel.AddOrUpdateRcHand(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcHandAsync(CanvasDragMove.InfoConfigService.RcHandDto[] records) {
            return base.Channel.AddOrUpdateRcHandAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.RcHandDto[] GetRcHandByInfo(string info) {
            return base.Channel.GetRcHandByInfo(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcHandDto[]> GetRcHandByInfoAsync(string info) {
            return base.Channel.GetRcHandByInfoAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteRcHand(System.Guid[] ids) {
            return base.Channel.DeleteRcHand(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcHandAsync(System.Guid[] ids) {
            return base.Channel.DeleteRcHandAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.RcHandListDto GetAllRcHandAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcHandAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcHandListDto> GetAllRcHandAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcHandAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.RcHandListDto GetRcHandByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcHandByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcHandListDto> GetRcHandByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcHandByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRcRewordpunish(CanvasDragMove.InfoConfigService.RcRewordpunishDto[] records) {
            return base.Channel.AddOrUpdateRcRewordpunish(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRcRewordpunishAsync(CanvasDragMove.InfoConfigService.RcRewordpunishDto[] records) {
            return base.Channel.AddOrUpdateRcRewordpunishAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateRewordpunishDepartment(CanvasDragMove.InfoConfigService.RcRewordpunishDto[] records) {
            return base.Channel.AddOrUpdateRewordpunishDepartment(records);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateRewordpunishDepartmentAsync(CanvasDragMove.InfoConfigService.RcRewordpunishDto[] records) {
            return base.Channel.AddOrUpdateRewordpunishDepartmentAsync(records);
        }
        
        public CanvasDragMove.InfoConfigService.RcRewordpunishDto[] GetRcRewordpunishByInfo(string info) {
            return base.Channel.GetRcRewordpunishByInfo(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcRewordpunishDto[]> GetRcRewordpunishByInfoAsync(string info) {
            return base.Channel.GetRcRewordpunishByInfoAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteRcRewordpunish(System.Guid[] ids) {
            return base.Channel.DeleteRcRewordpunish(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteRcRewordpunishAsync(System.Guid[] ids) {
            return base.Channel.DeleteRcRewordpunishAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.RcRewordpunishListDto GetAllRcRewordpunishAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcRewordpunishAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcRewordpunishListDto> GetAllRcRewordpunishAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllRcRewordpunishAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.RcRewordpunishListDto GetRcRewordpunishByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcRewordpunishByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.RcRewordpunishListDto> GetRcRewordpunishByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetRcRewordpunishByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.SysLoginLogListDto GetAllLoginLogAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllLoginLogAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysLoginLogListDto> GetAllLoginLogAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllLoginLogAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.SysLoginLogListDto GetLoginLogsByInfo(string info, int pageIndex, int pageSize) {
            return base.Channel.GetLoginLogsByInfo(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysLoginLogListDto> GetLoginLogsByInfoAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetLoginLogsByInfoAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.SysLoginLogListDto GetLoginLogsByInfoAndTime(System.DateTime startTime, System.DateTime endTime, string info, int pageIndex, int pageSize) {
            return base.Channel.GetLoginLogsByInfoAndTime(startTime, endTime, info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.SysLoginLogListDto> GetLoginLogsByInfoAndTimeAsync(System.DateTime startTime, System.DateTime endTime, string info, int pageIndex, int pageSize) {
            return base.Channel.GetLoginLogsByInfoAndTimeAsync(startTime, endTime, info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsCamera(CanvasDragMove.InfoConfigService.BsCameraDto[] bs) {
            return base.Channel.AddOrUpdateBsCamera(bs);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsCameraAsync(CanvasDragMove.InfoConfigService.BsCameraDto[] bs) {
            return base.Channel.AddOrUpdateBsCameraAsync(bs);
        }
        
        public CanvasDragMove.InfoConfigService.BsCameraDto[] GetBsCameraByInfo(string info) {
            return base.Channel.GetBsCameraByInfo(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraDto[]> GetBsCameraByInfoAsync(string info) {
            return base.Channel.GetBsCameraByInfoAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.BsCameraDto[] GetBsCameraByResourceId(System.Guid resourceId) {
            return base.Channel.GetBsCameraByResourceId(resourceId);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraDto[]> GetBsCameraByResourceIdAsync(System.Guid resourceId) {
            return base.Channel.GetBsCameraByResourceIdAsync(resourceId);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult SetResourceCameraRelations(System.Guid resourceId, System.Guid[] cameraIds) {
            return base.Channel.SetResourceCameraRelations(resourceId, cameraIds);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> SetResourceCameraRelationsAsync(System.Guid resourceId, System.Guid[] cameraIds) {
            return base.Channel.SetResourceCameraRelationsAsync(resourceId, cameraIds);
        }
        
        public CanvasDragMove.InfoConfigService.BsCameraListDto GetAllCamerasAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllCamerasAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraListDto> GetAllCamerasAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllCamerasAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsCameraListDto GetBsCameraByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsCameraByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraListDto> GetBsCameraByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsCameraByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsCameraDto[] GetAllBsCamera() {
            return base.Channel.GetAllBsCamera();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsCameraDto[]> GetAllBsCameraAsync() {
            return base.Channel.GetAllBsCameraAsync();
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeletBsCamera(System.Guid[] ids) {
            return base.Channel.DeletBsCamera(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeletBsCameraAsync(System.Guid[] ids) {
            return base.Channel.DeletBsCameraAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.BsImportantPassengerDto[] GetAllVIP() {
            return base.Channel.GetAllVIP();
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsImportantPassengerDto[]> GetAllVIPAsync() {
            return base.Channel.GetAllVIPAsync();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        CanvasDragMove.InfoConfigService.GetVipPageResponse CanvasDragMove.InfoConfigService.IInfoConfig.GetVipPage(CanvasDragMove.InfoConfigService.GetVipPageRequest request) {
            return base.Channel.GetVipPage(request);
        }
        
        public CanvasDragMove.InfoConfigService.BsImportantPassengerDto[] GetVipPage(int index, int pageCount, out int total) {
            CanvasDragMove.InfoConfigService.GetVipPageRequest inValue = new CanvasDragMove.InfoConfigService.GetVipPageRequest();
            inValue.index = index;
            inValue.pageCount = pageCount;
            CanvasDragMove.InfoConfigService.GetVipPageResponse retVal = ((CanvasDragMove.InfoConfigService.IInfoConfig)(this)).GetVipPage(inValue);
            total = retVal.total;
            return retVal.GetVipPageResult;
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.GetVipPageResponse> GetVipPageAsync(CanvasDragMove.InfoConfigService.GetVipPageRequest request) {
            return base.Channel.GetVipPageAsync(request);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult VIPAdd(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto) {
            return base.Channel.VIPAdd(vipDto);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> VIPAddAsync(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto) {
            return base.Channel.VIPAddAsync(vipDto);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult VIPUpdate(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto) {
            return base.Channel.VIPUpdate(vipDto);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> VIPUpdateAsync(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto) {
            return base.Channel.VIPUpdateAsync(vipDto);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult VIPDelete(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto) {
            return base.Channel.VIPDelete(vipDto);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> VIPDeleteAsync(CanvasDragMove.InfoConfigService.BsImportantPassengerDto vipDto) {
            return base.Channel.VIPDeleteAsync(vipDto);
        }
        
        public CanvasDragMove.InfoConfigService.BsBlacklistListDto GetAllBlacklistsAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllBlacklistsAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsBlacklistListDto> GetAllBlacklistsAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllBlacklistsAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsBlacklist(CanvasDragMove.InfoConfigService.BsBlacklistDto[] bl) {
            return base.Channel.AddOrUpdateBsBlacklist(bl);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsBlacklistAsync(CanvasDragMove.InfoConfigService.BsBlacklistDto[] bl) {
            return base.Channel.AddOrUpdateBsBlacklistAsync(bl);
        }
        
        public CanvasDragMove.InfoConfigService.BsBlacklistDto[] GetBsBlacklistByInfo(string info) {
            return base.Channel.GetBsBlacklistByInfo(info);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsBlacklistDto[]> GetBsBlacklistByInfoAsync(string info) {
            return base.Channel.GetBsBlacklistByInfoAsync(info);
        }
        
        public CanvasDragMove.InfoConfigService.BsBlacklistDto[] GetBsBlacklist(string Name, string IdNo) {
            return base.Channel.GetBsBlacklist(Name, IdNo);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsBlacklistDto[]> GetBsBlacklistAsync(string Name, string IdNo) {
            return base.Channel.GetBsBlacklistAsync(Name, IdNo);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult HandBsBlacklist(CanvasDragMove.InfoConfigService.BsBlacklistDto[] blacklist) {
            return base.Channel.HandBsBlacklist(blacklist);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> HandBsBlacklistAsync(CanvasDragMove.InfoConfigService.BsBlacklistDto[] blacklist) {
            return base.Channel.HandBsBlacklistAsync(blacklist);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult UpdateHandBsBlacklist(CanvasDragMove.InfoConfigService.BsBlacklistDto[] blacklist) {
            return base.Channel.UpdateHandBsBlacklist(blacklist);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> UpdateHandBsBlacklistAsync(CanvasDragMove.InfoConfigService.BsBlacklistDto[] blacklist) {
            return base.Channel.UpdateHandBsBlacklistAsync(blacklist);
        }
        
        public CanvasDragMove.InfoConfigService.BsBlacklistListDto GetBsBlacklistByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsBlacklistByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsBlacklistListDto> GetBsBlacklistByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsBlacklistByInfoAsPageAsync(info, pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeletBsBlacklist(System.Guid[] ids) {
            return base.Channel.DeletBsBlacklist(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeletBsBlacklistAsync(System.Guid[] ids) {
            return base.Channel.DeletBsBlacklistAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult AddOrUpdateBsSuspectFlight(CanvasDragMove.InfoConfigService.BsSuspectFlightDto[] bs) {
            return base.Channel.AddOrUpdateBsSuspectFlight(bs);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> AddOrUpdateBsSuspectFlightAsync(CanvasDragMove.InfoConfigService.BsSuspectFlightDto[] bs) {
            return base.Channel.AddOrUpdateBsSuspectFlightAsync(bs);
        }
        
        public CanvasDragMove.InfoConfigService.OperationResult DeleteBsSuspectFlights(System.Guid[] ids) {
            return base.Channel.DeleteBsSuspectFlights(ids);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.OperationResult> DeleteBsSuspectFlightsAsync(System.Guid[] ids) {
            return base.Channel.DeleteBsSuspectFlightsAsync(ids);
        }
        
        public CanvasDragMove.InfoConfigService.BsSuspectFlightListDto GetAllBsSuspectFlightAsPage(int pageIndex, int pageSize) {
            return base.Channel.GetAllBsSuspectFlightAsPage(pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectFlightListDto> GetAllBsSuspectFlightAsPageAsync(int pageIndex, int pageSize) {
            return base.Channel.GetAllBsSuspectFlightAsPageAsync(pageIndex, pageSize);
        }
        
        public CanvasDragMove.InfoConfigService.BsSuspectFlightListDto GetBsSuspectFlightByInfoAsPage(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsSuspectFlightByInfoAsPage(info, pageIndex, pageSize);
        }
        
        public System.Threading.Tasks.Task<CanvasDragMove.InfoConfigService.BsSuspectFlightListDto> GetBsSuspectFlightByInfoAsPageAsync(string info, int pageIndex, int pageSize) {
            return base.Channel.GetBsSuspectFlightByInfoAsPageAsync(info, pageIndex, pageSize);
        }
    }
}
