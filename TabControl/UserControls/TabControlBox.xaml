<TabControl x:Class="TabControl.UserControls.TabControlBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TabControl.UserControls"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <TabControl.Resources>
        <ResourceDictionary>
            <!--右键菜单样式-->
            <ControlTemplate x:Key="menuTemplate" TargetType="ContextMenu">
                <Border Name="bd" Background="#99001133">
                    <ItemsPresenter/>
                </Border>
            </ControlTemplate>
            <ControlTemplate x:Key="menuSeperatorTemplate" TargetType="Separator">
                <Border Background="#6fff">
                </Border>
            </ControlTemplate>
            <ControlTemplate x:Key="menuItemTemplate" TargetType="MenuItem">
                <Border Name="bd" Height="30" Background="Transparent">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="tb" Margin="0,0,10,0" Foreground="#fff"
                                   VerticalAlignment="Center"
                                   Text="{Binding Header, RelativeSource={RelativeSource TemplatedParent}}"/>
                    </StackPanel>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter TargetName="bd" Property="Background" Value="#99001133" />
                        <Setter TargetName="tb" Property="Foreground" Value="#ff5e5e" />
                        <Setter TargetName="tb" Property="Margin" Value="0,0,9,0" />
                       
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <!--  TabControl右侧菜单列表样式  -->
            <Style x:Key="TabMenuItemStyle" TargetType="{x:Type MenuItem}">
                <!--  Header，IsEnabled，IsCheckable,IsChecked绑定TabItem属性  -->
                <Setter Property="Header" Value="{Binding Path=Header}" />
                <Setter Property="IsEnabled" Value="{Binding Path=IsEnabled}" />
                <Setter Property="IsCheckable" Value="{Binding Path=IsEnabled}" />
                <Setter Property="IsChecked" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                <Setter Property="Foreground" Value="Black" />
                <Setter Property="Background" Value="White" />
            </Style>
            <Style x:Key="TabMenuButtonStyle" TargetType="{x:Type MenuItem}">
                <Setter Property="Focusable" Value="False" />
                <Setter Property="Height" Value="20" />
                <Setter Property="Width" Value="20" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Border Name="ButtonBorder" Background="#3b49c8">
                                <Grid>
                                    <ContentPresenter
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Stretch"
                                ContentSource="Header">
                                        <ContentPresenter.ContentTemplate>
                                            <DataTemplate>
                                                <Border x:Name="BorderBac">
                                                    <Path
                                                Margin="5"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Data="M91.4 120.4h50.2c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H91.4c-15.1 0-25.1-10-25.1-25.1v-50.2c0-15.1 10-25.1 25.1-25.1zM282.2 120.4H935c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H282.2c-15.1 0-25.1-10-25.1-25.1v-50.2c0-15.1 10.1-25.1 25.1-25.1zM91.4 805.8h50.2c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H91.4c-15.1 0-25.1-10-25.1-25.1v-50.2c0-12.5 10-25.1 25.1-25.1zM282.2 805.8H935c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H282.2c-15.1 0-25.1-10-25.1-25.1v-50.2c0-12.5 10.1-25.1 25.1-25.1zM91.4 461.8h50.2c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H91.4c-15.1 0-25.1-10-25.1-25.1v-50.2c0-12.5 10-25.1 25.1-25.1zM282.2 461.8H935c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H282.2c-15.1 0-25.1-10-25.1-25.1v-50.2c0-12.5 10.1-25.1 25.1-25.1z"
                                                Fill="Black"
                                                Stretch="Fill" />
                                                </Border>
                                            </DataTemplate>
                                        </ContentPresenter.ContentTemplate>
                                    </ContentPresenter>
                                    <Popup
                                Name="Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding IsSubmenuOpen}"
                                Placement="Bottom"
                                PopupAnimation="Fade">
                                        <Border
                                    Name="SubmenuBorder"
                                    Margin="1"
                                    Background="White"
                                    BorderBrush="Gray"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                        </Border>
                                    </Popup>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#4CBAFA" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>


        </ResourceDictionary>
    </TabControl.Resources>
    <TabControl.Style>
        <Style TargetType="{x:Type TabControl}">
            <Setter Property="Padding" Value="2" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="White" />
            <Setter Property="BorderBrush" Value="BlueViolet" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type local:TabItemBox}">
                        <Setter Property="FontSize" Value="12" />
                        <Setter Property="FontFamily" Value="微软雅黑" />
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="Background" Value="White" />
                        <Setter Property="BorderBrush" Value="Bisque" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Padding" Value="6,2,6,2" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type local:TabItemBox}">
                                    <Grid   x:Name="templateRoot"
                                    Height="30"
                                    Margin="-2,0,5,0"
                                    SnapsToDevicePixels="true"
                                    MouseRightButtonUp="tabItem_MouseRightButtonUp">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="16" />
                                        </Grid.ColumnDefinitions>
                                        <Border
                                        x:Name="mainBorder"
                                        Grid.Column="0"
                                        Grid.ColumnSpan="2"
                                        Background="#E0E2F2"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="2,2,0,0" />
                                        <ContentPresenter
                                                x:Name="contentPresenter"
                                                Grid.Column="0"
                                                Margin="{TemplateBinding Padding}"
                                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                ContentSource="Header"
                                                Focusable="False"
                                                RecognizesAccessKey="True"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        <Button x:Name="btnClose" Grid.Column="1" Click="BtnClosed_Click"
                                                Tag="{TemplateBinding Header}">
                                            <Button.Style>
                                                <Style TargetType="Button">
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Setter Property="Width" Value="10" />
                                                    <Setter Property="Height" Value="10" />
                                                    <Setter Property="Margin" Value="2" />
                                                    <Setter Property="ToolTip" Value="关闭" />
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderThickness" Value="0" />
                                                    <Setter Property="HorizontalAlignment" Value="Right" />
                                                    <Setter Property="VerticalAlignment" Value="Top" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="Button">
                                                                <Image Source="../Images/blackerror.png" />
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="#000000" />
                                            <Setter TargetName="mainBorder" Property="Background" Value="#F0F1F7" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="#000000" />
                                            <Setter TargetName="mainBorder" Property="Background" Value="White" />
                                        </Trigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding CanClosed, RelativeSource={RelativeSource Self}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="btnClose" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                                <Condition Binding="{Binding CanClosed, RelativeSource={RelativeSource Self}}" Value="true" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter TargetName="btnClose" Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid
                        x:Name="templateRoot"
                        ClipToBounds="true"
                        KeyboardNavigation.TabNavigation="Local"
                        SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" Width="*" />
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto" />
                                <RowDefinition x:Name="RowDefinition1" Height="*" />
                            </Grid.RowDefinitions>
                            <ScrollViewer   Name="svTP"
                                            Grid.Row="0"
                                            Grid.Column="0"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            CanContentScroll="True"
                                            HorizontalScrollBarVisibility="Hidden"
                                            IsDeferredScrollingEnabled="False"
                                            SnapsToDevicePixels="True"
                                            VerticalScrollBarVisibility="Disabled">
                                <TabPanel   x:Name="HeaderPanel"
                                            Margin="2,2,2,0"
                                            Panel.ZIndex="1"
                                            Background="Transparent"
                                            IsItemsHost="true"
                                            KeyboardNavigation.TabIndex="1" />
                            </ScrollViewer>
                            <Border x:Name="ContentPanel"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2"
                                    KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentSource="SelectedContent"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <StackPanel Grid.Row="0"
                                        Grid.Column="1"
                                        VerticalAlignment="Center">
                                <Menu x:Name="HeadMenu" Background="BurlyWood">
                                    <MenuItem ItemContainerStyle="{StaticResource TabMenuItemStyle}"
                                              ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}}, Path=Items}"
                                              Style="{StaticResource TabMenuButtonStyle}" />
                                </Menu>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="Auto" />
                                <Setter TargetName="HeaderPanel" Property="Margin" Value="2,0,2,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ColumnDefinition0" Property="Width" Value="Auto" />
                                <Setter TargetName="ColumnDefinition1" Property="Width" Value="*" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Margin" Value="2,2,0,2" />
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter TargetName="HeaderPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Grid.Column" Value="1" />
                                <Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
                                <Setter TargetName="ColumnDefinition0" Property="Width" Value="*" />
                                <Setter TargetName="ColumnDefinition1" Property="Width" Value="Auto" />
                                <Setter TargetName="RowDefinition0" Property="Height" Value="*" />
                                <Setter TargetName="RowDefinition1" Property="Height" Value="0" />
                                <Setter TargetName="HeaderPanel" Property="Margin" Value="0,2,2,2" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </TabControl.Style>
    <TabControl.ContextMenu>
        <ContextMenu Name="menu" Template="{StaticResource menuTemplate}">
            <MenuItem Header="关闭标签" Template="{StaticResource menuItemTemplate}" CommandParameter="0" Click="menuItemClick"/>
            <Separator Height="1" Template="{StaticResource menuSeperatorTemplate}" Margin="1 0 1 0"></Separator>
            <MenuItem Header="关闭其他标签" Template="{StaticResource menuItemTemplate}" CommandParameter="1" Click="menuItemClick"/>
            <MenuItem Header="关闭左侧标签" Template="{StaticResource menuItemTemplate}" CommandParameter="2" Click="menuItemClick"/>
            <MenuItem Header="关闭右侧标签" Template="{StaticResource menuItemTemplate}" CommandParameter="3" Click="menuItemClick"/>
        </ContextMenu>
    </TabControl.ContextMenu>
</TabControl>
