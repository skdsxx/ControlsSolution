<Application x:Class="TabControl.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:common="clr-namespace:TabControl.Models"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <!--无边框阴影效果窗口样式-->
            <Style x:Key="ShadowWinStyle" TargetType="{x:Type Window}">
                <Setter Property="AllowsTransparency" Value="true"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="FontFamily" Value="Consolas, Microsoft YaHei"/>
                <Setter Property="FontSize" Value="24"/>
                <Setter Property="Foreground" Value="WhiteSmoke"/>
                <Setter Property="ResizeMode" Value="NoResize"/>
                <Setter Property="WindowStyle" Value="None"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Window}">
                            <Grid Margin="10">
                                <Rectangle Fill="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" RadiusX="5" RadiusY="5">
                                    <Rectangle.Effect>
                                        <DropShadowEffect BlurRadius="3" ShadowDepth="0"/>
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"  BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Margin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" CornerRadius="5">
                                    <ContentPresenter/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--标题栏快捷按钮样式-->
            <Style x:Key="TitleButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Height" Value="25"/>
                <Setter Property="Width" Value="25"/>
                <Setter Property="Margin" Value="10 0 0 0"></Setter>
            </Style>
            <!--左侧树形菜单MenuItem样式-->
            <Style x:Key="DefaultTreeViewItem" TargetType="TreeViewItem">
                <Setter Property="MinHeight" Value="25" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Margin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TreeViewItem}">
                            <StackPanel>
                                <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}"
                                MinHeight="{TemplateBinding MinHeight}" UseLayoutRounding="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <!--多层级间隔，暂缓-->
                                    <!--<Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={x:Static RelativeSource.TemplatedParent}}"-->
                                    <Grid Margin="{TemplateBinding Margin}" VerticalAlignment="Stretch">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition MinWidth="18" Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <!--展开收缩按钮-->
                                        <ToggleButton x:Name="ExpanderBtn" 
                                              IsChecked="{Binding Path=IsExpanded, RelativeSource={x:Static RelativeSource.TemplatedParent}, Mode=TwoWay}"
                                              ClickMode="Press" >
                                            <ToggleButton.Template>
                                                <ControlTemplate TargetType="ToggleButton">
                                                    <Border>
                                                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                                    </Border>
                                                </ControlTemplate>
                                            </ToggleButton.Template>
                                            <ToggleButton.Content>
                                                <TextBlock x:Name="ExpanderIcon"  Foreground="{TemplateBinding Foreground}" Text="&#xe62c;"/>
                                            </ToggleButton.Content>
                                        </ToggleButton>
                                        <!--内容-->
                                        <ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Grid>
                                </Border>
                                <ItemsPresenter Margin="18,0,0,0" x:Name="ItemsHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </StackPanel>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsExpanded" Value="False">
                                    <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsExpanded" Value="True">
                                    <Setter TargetName="ExpanderIcon" Property="Text" Value="&#xe62d;" />
                                </Trigger>
                                <Trigger Property="HasItems" Value="False">
                                    <Setter TargetName="ExpanderIcon" Property="Visibility" Value="Hidden" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="Aquamarine" />
                                    <Setter Property="Foreground" Value="Blue" />
                                </Trigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="FontSize" Value="26"></Setter>
                                    <Setter Property="FontWeight" Value="Bold"></Setter>
                                    <!--<Setter Property="Background" Value="AntiqueWhite" />
                            <Setter Property="Foreground" Value="Blue" />-->
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True" />
                                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" Value="DarkBlue" />
                                    <Setter Property="Foreground" Value="AliceBlue" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--左侧树形菜单样式-->
            <Style x:Key="TreeViewStyle" TargetType="TreeView">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="FontFamily" Value="宋体"></Setter>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Background" Value="#FF6F6A6A"/>
                <Setter Property="ItemContainerStyle"  Value="{StaticResource DefaultTreeViewItem}">
                    <!--<Setter.Value>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsExpanded" Value="{Binding IsExpand}"></Setter>
                </Style>
            </Setter.Value>-->
                </Setter>
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" 
                                                  DataType="{x:Type common:TreeViewContent}">
                            <StackPanel Orientation="Horizontal" Margin="1 4">
                                <Image  Width="16" Height="16" Source="{Binding Icon}"/>
                                <TextBlock Text="{Binding Header}" FontSize="16" Foreground="White"/>
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--菜单项MenuItem样式FIconMenuItem-->
            <Style x:Key="FIconMenuItem" TargetType="{x:Type MenuItem}">
                <Setter Property="BorderBrush" Value="AliceBlue"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Background" Value="Black"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Height" Value="28"/>
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Margin" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <!--Item-->
                            <Border  x:Name="border" Background="Transparent" Height="{TemplateBinding Height}" Opacity="1">
                                <Grid  VerticalAlignment="Center" Margin="{TemplateBinding Margin}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="icon_col" MaxWidth="35" SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="16" x:Name="arrow_col" SharedSizeGroup="MenumItemArrow"/>
                                    </Grid.ColumnDefinitions>
                                    <!--icon-->
                                    <TextBlock x:Name="PART_Icon" Text="{TemplateBinding Icon}" Foreground="{TemplateBinding Foreground}" Margin="5,1,1,1"/>
                                    <!--Header-->
                                    <ContentPresenter Grid.Column="1" x:Name="txtHeader" Margin="3,1,5,1" MinWidth="90"
                                          RecognizesAccessKey="True" VerticalAlignment="Center" ContentSource="Header"/>
                                    <!--快捷键 InputGestureText 暂不支持你了 -->
                                    <TextBlock Grid.Column="2" Margin="3,1,3,1" x:Name="IGTHost" Text="{TemplateBinding InputGestureText}" 
                                       FontSize="{TemplateBinding FontSize}"
                                       VerticalAlignment="Center" Visibility="Visible" Foreground="{TemplateBinding Foreground}" />
                                    <!--右指针-->
                                    <TextBlock x:Name="PART_Arrow" Grid.Column="3" Text="&#xe605;" Foreground="{TemplateBinding Foreground}" 
                                       FontSize="14" />
                                    <!--Style="{StaticResource FIcon}"-->
                                    <!--淡出子集菜单容器-->
                                    <!--<Popup x:Name="SubMenuPopup" AllowsTransparency="true" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Placement="Bottom"  Focusable="false" VerticalOffset="0"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border Background="{TemplateBinding Background}"  CornerRadius="0" Margin="5" Effect="{StaticResource DefaultDropShadow}"
                                                BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <StackPanel Margin="0" IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                                    </Grid>
                                </Border>
                            </Popup>-->
                                </Grid>
                            </Border>
                            <!--触发器-->
                            <ControlTemplate.Triggers>
                                <!--TopLevelHeader:第一级菜单（有子菜单）-->
                                <Trigger Property="Role" Value="TopLevelHeader">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                    <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                                    <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                                    <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                                    <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                                </Trigger>
                                <!--TopLevelItem 第一级菜单（无子级）-->
                                <Trigger Property="Role" Value="TopLevelItem">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
                                    <Setter Property="Margin" Value="5,1,1,1" TargetName="PART_Icon"/>
                                    <Setter Property="Margin" Value="1,1,6,1" TargetName="txtHeader"/>
                                    <Setter Property="MinWidth" Value="10" TargetName="txtHeader"/>
                                    <Setter Property="Width" Value="0" TargetName="arrow_col"/>
                                </Trigger>
                                <!--SubmenuHeader:子菜单，有子菜单-->
                                <Trigger Property="Role" Value="SubmenuHeader">
                                    <Setter Property="Visibility" Value="Visible" TargetName="PART_Arrow"/>
                                    <!--<Setter Property="Placement" Value="Right" TargetName="SubMenuPopup"/>-->
                                </Trigger>
                                <!--SubMenuItem:子菜单，无子级-->
                                <Trigger Property="Role" Value="SubMenuItem">
                                    <Setter Property="Visibility" Value="Collapsed" TargetName="PART_Arrow"/>
                                </Trigger>
                                <!--选中状态，优先级将高于Icon-->
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter TargetName="PART_Icon" Value="&#xe62a;" Property="Text"></Setter>
                                    <Setter TargetName="PART_Icon" Value="18" Property="FontSize"></Setter>
                                    <!--<Setter TargetName="PART_Icon" Value="{StaticResource CheckedForeground}" Property="Foreground"></Setter>-->
                                </Trigger>
                                <!--<Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Value="{StaticResource DisableOpacity}" Property="Opacity"></Setter>
                        </Trigger>-->
                                <!--高亮状态-->
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="Black"></Setter>
                                    <Setter Property="Foreground" Value="Azure"></Setter>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="Blue"></Setter>
                                    <Setter Property="Foreground" Value="Bisque"></Setter>
                                </Trigger>
                                <!--子菜单打开状态-->
                                <Trigger Property="IsSubmenuOpen" Value="true" >
                                    <Setter TargetName="PART_Arrow" Value="White"  Property="Foreground"></Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--左侧菜单MenuItem样式-->
            <!--基于FIconMenuItem的默认样式，提供Header模板-->
            <Style x:Key="DefaultMenuItem" TargetType="{x:Type MenuItem}" BasedOn="{StaticResource FIconMenuItem}">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <TextBlock x:Name="txtHeader" FontSize="{Binding FontSize,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"
                               HorizontalAlignment="Stretch" Margin="3,1,5,1"
                               Text="{Binding Header,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}" VerticalAlignment="Center"
                               Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType={x:Type MenuItem},Mode=FindAncestor}}"/>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--左侧PushMenu菜单样式-->
            <Style x:Key="PushMenuStyle" TargetType="Menu">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
                <Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="ItemContainerStyle" Value="{StaticResource DefaultMenuItem}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Menu}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                <ItemsPresenter Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
