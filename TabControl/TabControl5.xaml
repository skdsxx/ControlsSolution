<Window x:Class="TabControl.TabControl5"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ctrl="clr-namespace:TabControl.UserControls"
        mc:Ignorable="d"
        Title="TabControl5" Height="450" Width="800">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TabMenuItemStyle" TargetType="{x:Type MenuItem}">
            <!-- This will help us bind to the Header of a TabItem -->
            <Setter Property="Header" Value="{Binding Path=Header}" />
            <!-- 
            In order for MenuItems to support the IsEnabled state of a TabItem,
            we simply bind the IsEnabled property of the MenuItem to that of the
            TabItem.
            This way, a disabled TabItem will not be selectable via the Menu.
         -->
            <Setter Property="IsEnabled" Value="{Binding Path=IsEnabled}" />
            <!-- 
            By making the MenuItems checkable AND binding the IsChecked
            property to the IsSelected property of the TabItems, we'll 
            efficiently allow to pick the selected TabItem from the Menu
            with a simple two-way binding.
         -->
            <Setter Property="IsCheckable" Value="{Binding Path=IsEnabled}" />
            <Setter Property="IsChecked" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsHighlighted" Value="True">
                    <Setter Property="Foreground"
                       Value="Bisque"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" 
                       Value="Black"/>
                    <Setter Property="Background"
                                Value="Gainsboro"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Path x:Key="TabMenuButtonPath"
            Margin="2"
            Data="M91.4 120.4h50.2c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H91.4c-15.1 0-25.1-10-25.1-25.1v-50.2c0-15.1 10-25.1 25.1-25.1zM282.2 120.4H935c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H282.2c-15.1 0-25.1-10-25.1-25.1v-50.2c0-15.1 10.1-25.1 25.1-25.1zM91.4 805.8h50.2c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H91.4c-15.1 0-25.1-10-25.1-25.1v-50.2c0-12.5 10-25.1 25.1-25.1zM282.2 805.8H935c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H282.2c-15.1 0-25.1-10-25.1-25.1v-50.2c0-12.5 10.1-25.1 25.1-25.1zM91.4 461.8h50.2c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H91.4c-15.1 0-25.1-10-25.1-25.1v-50.2c0-12.5 10-25.1 25.1-25.1zM282.2 461.8H935c15.1 0 25.1 10 25.1 25.1v50.2c0 12.6-10 25.1-25.1 25.1H282.2c-15.1 0-25.1-10-25.1-25.1v-50.2c0-12.5 10.1-25.1 25.1-25.1z"
            Fill="Green"
            Stretch="Fill"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"/>
        <Style x:Key="TabMenuButtonStyle" TargetType="{x:Type MenuItem}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Width" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type MenuItem}">
                        <Border Name="ButtonBorder" 
                                Margin="1"  
                                CornerRadius="1" 
                                BorderThickness="1">
                            <Grid>
                                <ContentPresenter ContentSource="Header" 
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  Content="{StaticResource TabMenuButtonPath}">
                                </ContentPresenter>
                                <Popup Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                                       AllowsTransparency="True" 
                                       Focusable="False"
                                       PopupAnimation="Fade">
                                    <!-- 
                              Since we override the ControlTemplate, we're also responsible
                              for drawing stuff like the shadow around the popup-menu.
                              
                              Here, I'll use a Chrome that's provided in the Aero assembly. 
                              Note that, in order to use this (that is, the namespace defined
                              at the very top of this window), a reference to 
                              PresentationFramework.Aero is required.-->
                                    <Border Name="SubmenuBorder"
                                            Margin="1"
                                            Background="LightGray"
                                            SnapsToDevicePixels="True"
                                            CornerRadius="1" 
                                            BorderThickness="1">
                                        <StackPanel IsItemsHost="True" 
                                                   KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Border>
                                </Popup>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="ButtonBorder" Property="Background" 
                                Value="Beige"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ctrl:TabItemEx}">
            <Setter Property="Background" Value="White"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Padding" Value="6,2,6,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Close" Value="{Binding Closed}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ctrl:TabItemEx}">
                        <Grid x:Name="templateRoot" 
                          SnapsToDevicePixels="true" 
                          Margin="-2 0 5 0"
                          Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="16"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="mainBorder" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Grid.Column="0" Grid.ColumnSpan="2"
                                CornerRadius="2,2,0,0"
                                Background="#E0E2F2">
                            </Border>
                            <ContentPresenter x:Name="contentPresenter" 
                                          Grid.Column="0"
                                          ContentSource="Header" Focusable="False" 
                                          HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            <Button Grid.Column="1" x:Name="btnClose">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Width" Value="10"/>
                                        <Setter Property="Height" Value="10"/>
                                        <Setter Property="Margin" Value="2"/>
                                        <Setter Property="ToolTip" Value="关闭"/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Setter Property="BorderThickness" Value="0"/>
                                        <Setter Property="HorizontalAlignment" Value="Right"/>
                                        <Setter Property="VerticalAlignment" Value="Top"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Grid x:Name="GridRoot">
                                                        <Viewbox>
                                                            <Path Data="M 0,0 12,12 M 12,0 0,12" 
                                                                  Margin="5 0 2 0"
                                                                  HorizontalAlignment="Right"
                                                                  VerticalAlignment="Center"
                                                                  StrokeThickness="2" 
                                                                  Stroke="{TemplateBinding Foreground}"/>       
                                                        </Viewbox>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="LightBlue"/>
                                <Setter TargetName="mainBorder" Property="Background" Value="#F0F1F7"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="Red"/>
                                <Setter TargetName="mainBorder" Property="Background" Value="White"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsClosed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="btnClose" Value="Visible"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsClosed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" TargetName="btnClose" Value="Visible"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ctrl:TabControlEx}">
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="Yellow"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ctrl:TabControlEx}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0" Width="*"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Disabled"
                                          CanContentScroll="True" 
                                          HorizontalScrollBarVisibility="Hidden"
                                          IsDeferredScrollingEnabled="False"
                                          SnapsToDevicePixels="True"
                                          Name="svTP"
                                          HorizontalAlignment="Stretch" 
                                          VerticalAlignment="Stretch">
                                <TabPanel x:Name="HeaderPanel" 
                                          Background="Transparent" 
                                          IsItemsHost="true" 
                                          Margin="2,2,2,0" 
                                          KeyboardNavigation.TabIndex="1" 
                                          Panel.ZIndex="1"/>
                            </ScrollViewer>
                            <Border x:Name="ContentPanel" 
                                    Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}"
                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                    KeyboardNavigation.TabIndex="2" 
                                    KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <StackPanel VerticalAlignment="Center" 
                                        Grid.Row="0" Grid.Column="1">
                                <!--<Button x:Name="btnShowList" 
                                        Height="20" Width="20" 
                                        Content="..." 
                                        Background="Transparent"
                                        BorderThickness="0"
                                        HorizontalAlignment="Right" 
                                        Margin="0 0 5 0"/>-->
                                <!--<Popup Width="auto" Height="auto" 
                                       x:Name="HeadList" 
                                       IsOpen="False">
                                    <ListBox x:Name="HeadContent"/>
                                </Popup>-->
                                <Menu x:Name="HeadMenu" Background="BurlyWood">
                                    <MenuItem Style="{StaticResource TabMenuButtonStyle}"
                                                      ItemsSource="{Binding RelativeSource={RelativeSource FindAncestor, 
                                                             AncestorType={x:Type TabControl}}, Path=Items}"
                                                      ItemContainerStyle="{StaticResource TabMenuItemStyle}">
                                    </MenuItem>
                                </Menu>
                            </StackPanel>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="Auto"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,0,2,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="2,2,0,2"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                <Setter Property="Width" TargetName="ColumnDefinition0" Value="*"/>
                                <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                <Setter Property="Height" TargetName="RowDefinition0" Value="*"/>
                                <Setter Property="Height" TargetName="RowDefinition1" Value="0"/>
                                <Setter Property="Margin" TargetName="HeaderPanel" Value="0,2,2,2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="Green"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Button Content="加Item" Width="60" Height="30"/>
        <ctrl:TabControlEx Grid.Row="1" 
                               Margin="10,1,10,3" 
                               ItemsSource="{Binding TabItemWithCloses}"/>
    </Grid>
</Window>
